{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenido a MkDocs For full documentation visit mkdocs.org . Comandos mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Maquetaci\u00f3n del proyecto mkdocs.yml # Archivo de configraci\u00f3n docs/ # Carpeta raiz por defecto index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Bienvenido a MkDocs"},{"location":"#bienvenido-a-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Bienvenido a MkDocs"},{"location":"#comandos","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Comandos"},{"location":"#maquetacion-del-proyecto","text":"mkdocs.yml # Archivo de configraci\u00f3n docs/ # Carpeta raiz por defecto index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Maquetaci\u00f3n del proyecto"},{"location":"ANGULAR/Proint/","text":"1 Creando Proyecto ng new FRONT-Angular-api Nos preguntar\u00e1 agregar routing y le damos a que si Would you like to add Angular routing? ( y/N ) yes Luego nos pregunta sobre si usar CSS solo u otros frameworks, escojeremos css y al dar ENTER empezar\u00e1 a crear neustro nuevo proyecto. | Ingresamos al proyecto para probar el servidor: ng serve 1.2 Run Server ng serve --host = 0 .0.0.0 --disable-host-check ng serve --sourceMap = false --host = 0 .0.0.0 --disable-host-check 2 Creando Componentes ng g component component/navbar ng g component component/user-add ng g component component/user-list Y dentro de nuestro src/app/component tendremos creado nuestros nuevos componentes: Ahora crearemos servicios y modelos : 3 Creando MODELOS y SERVICIOS 3.1 Modelos Los modelos nos serviran para tener la estructura de nuestro modelo: ng g class model/user 3.2 Servicios Esta contine los metodos para hacer /GET /POST /PUT /DELETE ng g service service/user 4 REGISTRAMOS LIBRERIAS Vamos a registrar las librerias que usaremos en app.module.ts HttpClientModule , FormsModule Debe quedar asi: Ahora importamos para borrar esos errores, importaremos lo que falta: import { FormsModule } from '@angular/forms' ; import { HttpClientModule } from '@angular/common/http' | DEF: FormsModule: Sirve para recoger los datos de los formularios. HttpClientModule: Este nos sirve para hacer losservicios /GET /POST /PUT /DELETE 5 Configurando el MODELO Nos vamos a src/app/model/user.ts y agregamos esto: export class User { id ?: number | null ; nombres ?: string ; apellidos ?: string ; razonsocial ?: string ; direccion ?: string ; ruc ?: string ; celular ?: string ; } Deberia quedar asi igual al modelo de nuestro backend: 6 COMPONENTE NAV HTML Agregando este codigo a src/app/components/navbar/navbar.component.html < nav class = \"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\" aria-label = \"Main navigation\" > < div class = \"container-fluid\" > < a class = \"navbar-brand\" href = \"#\" > Offcanvas navbar </ a > < button class = \"navbar-toggler p-0 border-0\" type = \"button\" id = \"navbarSideCollapse\" aria-label = \"Toggle navigation\" > < span class = \"navbar-toggler-icon\" ></ span > </ button > < div class = \"navbar-collapse offcanvas-collapse\" id = \"navbarsExampleDefault\" > < ul class = \"navbar-nav me-auto mb-2 mb-lg-0\" > < li class = \"nav-item\" > < a class = \"nav-link active\" aria-current = \"page\" href = \"#\" > Dashboard </ a > </ li > < li class = \"nav-item\" > < a class = \"nav-link\" href = \"#\" > Notifications </ a > </ li > < li class = \"nav-item\" > < a class = \"nav-link\" href = \"#\" > Profile </ a > </ li > < li class = \"nav-item\" > < a class = \"nav-link\" href = \"#\" > Switch account </ a > </ li > < li class = \"nav-item dropdown\" > < a class = \"nav-link dropdown-toggle\" href = \"#\" id = \"dropdown01\" data-bs-toggle = \"dropdown\" aria-expanded = \"false\" > Settings </ a > < ul class = \"dropdown-menu\" aria-labelledby = \"dropdown01\" > < li >< a class = \"dropdown-item\" href = \"#\" > Action </ a ></ li > < li >< a class = \"dropdown-item\" href = \"#\" > Another action </ a ></ li > < li >< a class = \"dropdown-item\" href = \"#\" > Something else here </ a ></ li > </ ul > </ li > </ ul > < form class = \"d-flex\" > < input class = \"form-control me-2\" type = \"search\" placeholder = \"Search\" aria-label = \"Search\" > < button class = \"btn btn-outline-success\" type = \"submit\" > Search </ button > </ form > </ div > </ div > </ nav > 7 Agregando BOOTSTRAP - CSS FrameWorks Nos dirigimos a src/index.html y agregamos esto arriba de <head> : <!-- Font Awesome --> < link href = \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css\" rel = \"stylesheet\" /> <!-- Google Fonts --> < link href = \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" rel = \"stylesheet\" /> <!-- MDB --> < link href = \"https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.10.0/mdb.min.css\" rel = \"stylesheet\" /> Y el JS al finalizar el body osea encima de </body> : <!-- MDB --> < script type = \"text/javascript\" src = \"https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.10.0/mdb.min.js\" ></ script > INFO <app-root> | <app-root></app-root> esta hubicado en src/app/ y sus archivos son app.component.html y app.component.html como lo indica su codigo, entonces ese es el html que se esta mostrando en nuestro home : 8 Insert component in HOME Nos vamos a src/app/app.component.html y eliminamos todo el codigo excepto < router-outlet ></ router-outlet > y solo deberiamos tener eso y agregamos nuestro nav-bar : < app-navbar ></ app-navbar > < router-outlet ></ router-outlet > Colocaremos nuestro nav-bar component en la home: < app-navbar ></ app-navbar > < div class = \"container\" > < router-outlet ></ router-outlet > </ div > RUN SERVE ng serve --host = 0 .0.0.0 --disable-host-check ng serve --sourceMap = false --host = 0 .0.0.0 --disable-host-check 9 ROUTING Enrutamiento Nos dirigimos a src/app/app-routing.module.ts y dentro de const routes jalamos las rutas de LISTAR y AGREGAR. { path : \"usuarios\" , component : UserListComponent } y para poder acceder a esta ruta usaremos este codigo en html: < li class = \"nav-item\" > < a class = \"nav-link active\" href = \"#\" routerLink = \"usuarios\" > Usuarios </ a > </ li > routerLink=\"usuarios\" nos ayuda a acceder rapidamente sin cargar la pagina frente a href . 10 Creando TABLA para Listar USUARIOS En el componente src\\app\\component\\user-list\\user-list.component.html < table class = \"table\" > < thead class = \"table-dark\" > < tr > < th scope = \"col\" > # </ th > < th scope = \"col\" > Nombres </ th > < th scope = \"col\" > Apellidos </ th > < th scope = \"col\" > Razon Social </ th > < th scope = \"col\" > Direcci\u00f3n </ th > < th scope = \"col\" > Ruc </ th > < th scope = \"col\" > Celular </ th > < th scope = \"col\" > Opciones </ th > </ tr > </ thead > < tbody > < tr * ngFor = \"let item of listaUsuarios\" > < th scope = \"row\" > {{ item.id }} </ th > < td > {{ item.nombres }} </ td > < td > {{ item.apellidos }} </ td > < td > {{ item.razonsocial }} </ td > < td > {{ item.direccion }} </ td > < td > {{ item.ruc }} </ td > < td > {{ item.celular }} </ td > < td > < a href = \"#\" > Editar </ a > | < a href = \"#\" > Eliminar </ a > </ td > </ tr > </ tbody > </ table > En src\\app\\component\\user-list\\user-list.component.ts Deberia quedarnos asi: import { Component , OnInit } from '@angular/core' ; import { UserService } from 'src/app/service/user.service' ; @ Component ({ selector : 'app-user-list' , templateUrl : './user-list.component.html' , styleUrls : [ './user-list.component.css' ] }) export class UserListComponent implements OnInit { listaUsuarios : any ; constructor ( private userService : UserService ) { } ngOnInit () : void { this . userService . getUsers (). subscribe (( usuarios : any ) => { this . listaUsuarios = usuarios ; }) } } 11 Formulario Para A\u00f1adir USUARIOS Creando Nuevo Componente y Enrutarlo Hubicamos nuestro component.ts de nuestro componente y copiamos este identificador: Luego nos vamos a src\\app\\app-routing.module.ts y agregamos dos nuevas lienas una para importar nuestro componente y el otro para darle una ruta. Al darle una ruta en este ejemplo de la imagen es 'datos' esta misma la usaremos en nuestro codigo html para invocarla ejemplo. ```html form1 ``` ## ADD MDB","title":"Proint"},{"location":"ANGULAR/Proint/#1-creando-proyecto","text":"ng new FRONT-Angular-api Nos preguntar\u00e1 agregar routing y le damos a que si Would you like to add Angular routing? ( y/N ) yes Luego nos pregunta sobre si usar CSS solo u otros frameworks, escojeremos css y al dar ENTER empezar\u00e1 a crear neustro nuevo proyecto. | Ingresamos al proyecto para probar el servidor: ng serve","title":"1 Creando Proyecto"},{"location":"ANGULAR/Proint/#12-run-server","text":"ng serve --host = 0 .0.0.0 --disable-host-check ng serve --sourceMap = false --host = 0 .0.0.0 --disable-host-check","title":"1.2 Run Server"},{"location":"ANGULAR/Proint/#2-creando-componentes","text":"ng g component component/navbar ng g component component/user-add ng g component component/user-list Y dentro de nuestro src/app/component tendremos creado nuestros nuevos componentes: Ahora crearemos servicios y modelos :","title":"2 Creando Componentes"},{"location":"ANGULAR/Proint/#3-creando-modelos-y-servicios","text":"","title":"3 Creando MODELOS y SERVICIOS"},{"location":"ANGULAR/Proint/#31-modelos","text":"Los modelos nos serviran para tener la estructura de nuestro modelo: ng g class model/user","title":"3.1 Modelos"},{"location":"ANGULAR/Proint/#32-servicios","text":"Esta contine los metodos para hacer /GET /POST /PUT /DELETE ng g service service/user","title":"3.2 Servicios"},{"location":"ANGULAR/Proint/#4-registramos-librerias","text":"Vamos a registrar las librerias que usaremos en app.module.ts HttpClientModule , FormsModule Debe quedar asi: Ahora importamos para borrar esos errores, importaremos lo que falta: import { FormsModule } from '@angular/forms' ; import { HttpClientModule } from '@angular/common/http' | DEF: FormsModule: Sirve para recoger los datos de los formularios. HttpClientModule: Este nos sirve para hacer losservicios /GET /POST /PUT /DELETE","title":"4 REGISTRAMOS LIBRERIAS"},{"location":"ANGULAR/Proint/#5-configurando-el-modelo","text":"Nos vamos a src/app/model/user.ts y agregamos esto: export class User { id ?: number | null ; nombres ?: string ; apellidos ?: string ; razonsocial ?: string ; direccion ?: string ; ruc ?: string ; celular ?: string ; } Deberia quedar asi igual al modelo de nuestro backend:","title":"5 Configurando el MODELO"},{"location":"ANGULAR/Proint/#6-componente-nav-html","text":"Agregando este codigo a src/app/components/navbar/navbar.component.html < nav class = \"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\" aria-label = \"Main navigation\" > < div class = \"container-fluid\" > < a class = \"navbar-brand\" href = \"#\" > Offcanvas navbar </ a > < button class = \"navbar-toggler p-0 border-0\" type = \"button\" id = \"navbarSideCollapse\" aria-label = \"Toggle navigation\" > < span class = \"navbar-toggler-icon\" ></ span > </ button > < div class = \"navbar-collapse offcanvas-collapse\" id = \"navbarsExampleDefault\" > < ul class = \"navbar-nav me-auto mb-2 mb-lg-0\" > < li class = \"nav-item\" > < a class = \"nav-link active\" aria-current = \"page\" href = \"#\" > Dashboard </ a > </ li > < li class = \"nav-item\" > < a class = \"nav-link\" href = \"#\" > Notifications </ a > </ li > < li class = \"nav-item\" > < a class = \"nav-link\" href = \"#\" > Profile </ a > </ li > < li class = \"nav-item\" > < a class = \"nav-link\" href = \"#\" > Switch account </ a > </ li > < li class = \"nav-item dropdown\" > < a class = \"nav-link dropdown-toggle\" href = \"#\" id = \"dropdown01\" data-bs-toggle = \"dropdown\" aria-expanded = \"false\" > Settings </ a > < ul class = \"dropdown-menu\" aria-labelledby = \"dropdown01\" > < li >< a class = \"dropdown-item\" href = \"#\" > Action </ a ></ li > < li >< a class = \"dropdown-item\" href = \"#\" > Another action </ a ></ li > < li >< a class = \"dropdown-item\" href = \"#\" > Something else here </ a ></ li > </ ul > </ li > </ ul > < form class = \"d-flex\" > < input class = \"form-control me-2\" type = \"search\" placeholder = \"Search\" aria-label = \"Search\" > < button class = \"btn btn-outline-success\" type = \"submit\" > Search </ button > </ form > </ div > </ div > </ nav >","title":"6 COMPONENTE NAV HTML"},{"location":"ANGULAR/Proint/#7-agregando-bootstrap-css-frameworks","text":"Nos dirigimos a src/index.html y agregamos esto arriba de <head> : <!-- Font Awesome --> < link href = \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css\" rel = \"stylesheet\" /> <!-- Google Fonts --> < link href = \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" rel = \"stylesheet\" /> <!-- MDB --> < link href = \"https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.10.0/mdb.min.css\" rel = \"stylesheet\" /> Y el JS al finalizar el body osea encima de </body> : <!-- MDB --> < script type = \"text/javascript\" src = \"https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.10.0/mdb.min.js\" ></ script >","title":"7 Agregando BOOTSTRAP - CSS FrameWorks"},{"location":"ANGULAR/Proint/#info-app-root","text":"| <app-root></app-root> esta hubicado en src/app/ y sus archivos son app.component.html y app.component.html como lo indica su codigo, entonces ese es el html que se esta mostrando en nuestro home :","title":"INFO &lt;app-root&gt;"},{"location":"ANGULAR/Proint/#8-insert-component-in-home","text":"Nos vamos a src/app/app.component.html y eliminamos todo el codigo excepto < router-outlet ></ router-outlet > y solo deberiamos tener eso y agregamos nuestro nav-bar : < app-navbar ></ app-navbar > < router-outlet ></ router-outlet > Colocaremos nuestro nav-bar component en la home: < app-navbar ></ app-navbar > < div class = \"container\" > < router-outlet ></ router-outlet > </ div >","title":"8 Insert component in HOME"},{"location":"ANGULAR/Proint/#run-serve","text":"ng serve --host = 0 .0.0.0 --disable-host-check ng serve --sourceMap = false --host = 0 .0.0.0 --disable-host-check","title":"RUN SERVE"},{"location":"ANGULAR/Proint/#9-routing-enrutamiento","text":"Nos dirigimos a src/app/app-routing.module.ts y dentro de const routes jalamos las rutas de LISTAR y AGREGAR. { path : \"usuarios\" , component : UserListComponent } y para poder acceder a esta ruta usaremos este codigo en html: < li class = \"nav-item\" > < a class = \"nav-link active\" href = \"#\" routerLink = \"usuarios\" > Usuarios </ a > </ li > routerLink=\"usuarios\" nos ayuda a acceder rapidamente sin cargar la pagina frente a href .","title":"9 ROUTING Enrutamiento"},{"location":"ANGULAR/Proint/#10-creando-tabla-para-listar-usuarios","text":"En el componente src\\app\\component\\user-list\\user-list.component.html < table class = \"table\" > < thead class = \"table-dark\" > < tr > < th scope = \"col\" > # </ th > < th scope = \"col\" > Nombres </ th > < th scope = \"col\" > Apellidos </ th > < th scope = \"col\" > Razon Social </ th > < th scope = \"col\" > Direcci\u00f3n </ th > < th scope = \"col\" > Ruc </ th > < th scope = \"col\" > Celular </ th > < th scope = \"col\" > Opciones </ th > </ tr > </ thead > < tbody > < tr * ngFor = \"let item of listaUsuarios\" > < th scope = \"row\" > {{ item.id }} </ th > < td > {{ item.nombres }} </ td > < td > {{ item.apellidos }} </ td > < td > {{ item.razonsocial }} </ td > < td > {{ item.direccion }} </ td > < td > {{ item.ruc }} </ td > < td > {{ item.celular }} </ td > < td > < a href = \"#\" > Editar </ a > | < a href = \"#\" > Eliminar </ a > </ td > </ tr > </ tbody > </ table > En src\\app\\component\\user-list\\user-list.component.ts Deberia quedarnos asi: import { Component , OnInit } from '@angular/core' ; import { UserService } from 'src/app/service/user.service' ; @ Component ({ selector : 'app-user-list' , templateUrl : './user-list.component.html' , styleUrls : [ './user-list.component.css' ] }) export class UserListComponent implements OnInit { listaUsuarios : any ; constructor ( private userService : UserService ) { } ngOnInit () : void { this . userService . getUsers (). subscribe (( usuarios : any ) => { this . listaUsuarios = usuarios ; }) } }","title":"10 Creando TABLA para Listar USUARIOS"},{"location":"ANGULAR/Proint/#11-formulario-para-anadir-usuarios","text":"","title":"11 Formulario Para A\u00f1adir USUARIOS"},{"location":"ANGULAR/Proint/#creando-nuevo-componente-y-enrutarlo","text":"Hubicamos nuestro component.ts de nuestro componente y copiamos este identificador: Luego nos vamos a src\\app\\app-routing.module.ts y agregamos dos nuevas lienas una para importar nuestro componente y el otro para darle una ruta. Al darle una ruta en este ejemplo de la imagen es 'datos' esta misma la usaremos en nuestro codigo html para invocarla ejemplo. ```html form1 ``` ## ADD MDB","title":"Creando Nuevo Componente y Enrutarlo"},{"location":"ANGULAR/RUN%20ON%20LAN/","text":"ng serve --sourceMap=false --host=0.0.0.0 --disable-host-check ng serve --host=0.0.0.0 --disable-host-check","title":"RUN ON LAN"},{"location":"BLAZOR/Blazor/","text":"El menu contextual de Paquetes marcamos y deberia estar asi: y contener estos valores: o estos otros valores: nuget.org https://api.nuget.org/v3/index.json Font: https://es.stackoverflow.com/questions/315573/problema-paquetes-nuget-visual-studio-2019-c","title":"Blazor"},{"location":"DJANGO/CONFIGURAR%20ENTORNO%20DJANGO/","text":"CONFIGURAR ENTORNO DJANGO | Requisito tener instalado el Python 3.9 o 3.10 debe estar registrado en el path del sistema | Si estamos en Linux deberemos escribir python3 para ejecutar algunos comandos si es que nos da error. 1 Instalando en forma global los paquetes para crear un entorno virtual. pip install virtualenv 2 Crea un entorno virtual en la ruta donde estamos ubicados con el nombre e3.9 virtualenv e3.9 3 Activa el entorno virtual e3.9 \\S cripts \\a ctivate On linux: source/bin/activate PROYECTO NUEVO 1. Instala los paquetes de django en el entorno virtual pip install django 2. Muestra la lista de paquetes instalados en el entorno virtual pip freeze 3. Crea un proyecto de django con el nombre APIRestDjango django-admin startproject APIRestDjango 4. Ingresa en la carpeta del proyecto creado cd APIRestDjango 5. Crea un aplicaci\u00f3n de Django dentro del proyecto con el nombre apirest manage.py startapp apirest On linux: python3 manage.py startapp apirest 6. Ejecuta las migraciones que vienen por defecto en Django, creando las tablas de acceso al sistema y usuarios. manage.py migrate On Linux python3 manage.py migrate 7. Crea un super usuario para acceder al sistema manage.py createsuperuser On Linux python3 manage.py createsuperuser | Salir de env deactivate LEVANTAR SERVER 1. Levantar un servidor de desarrollo Django manage.py runserver 2. En el navegar para acceder al django admin http://127.0.0.1:8000/admin/ | Up on LAN python3 manage.py runserver 0 .0.0.0:8000 For all: ALLOWED_HOSTS = [ '*' ] -- Es posible que deba agregar su direcci\u00f3n IP de LAN a ALLOWED_HOSTS en settings.py FONTS: Font: https://stackoverflow.com/questions/22144189/making-django-server-accessible-in-lan Font: https://stackoverflow.com/questions/24857158/commanderror-you-must-set-settings-allowed-hosts-if-debug-is-false/27792097 manage.py migration","title":"CONFIGURAR ENTORNO DJANGO"},{"location":"DJANGO/CONFIGURAR%20ENTORNO%20DJANGO/#configurar-entorno-django","text":"| Requisito tener instalado el Python 3.9 o 3.10 debe estar registrado en el path del sistema | Si estamos en Linux deberemos escribir python3 para ejecutar algunos comandos si es que nos da error. 1 Instalando en forma global los paquetes para crear un entorno virtual. pip install virtualenv 2 Crea un entorno virtual en la ruta donde estamos ubicados con el nombre e3.9 virtualenv e3.9 3 Activa el entorno virtual e3.9 \\S cripts \\a ctivate On linux: source/bin/activate","title":"CONFIGURAR ENTORNO DJANGO"},{"location":"DJANGO/CONFIGURAR%20ENTORNO%20DJANGO/#proyecto-nuevo","text":"1. Instala los paquetes de django en el entorno virtual pip install django 2. Muestra la lista de paquetes instalados en el entorno virtual pip freeze 3. Crea un proyecto de django con el nombre APIRestDjango django-admin startproject APIRestDjango 4. Ingresa en la carpeta del proyecto creado cd APIRestDjango 5. Crea un aplicaci\u00f3n de Django dentro del proyecto con el nombre apirest manage.py startapp apirest On linux: python3 manage.py startapp apirest 6. Ejecuta las migraciones que vienen por defecto en Django, creando las tablas de acceso al sistema y usuarios. manage.py migrate On Linux python3 manage.py migrate 7. Crea un super usuario para acceder al sistema manage.py createsuperuser On Linux python3 manage.py createsuperuser | Salir de env deactivate","title":"PROYECTO NUEVO"},{"location":"DJANGO/CONFIGURAR%20ENTORNO%20DJANGO/#levantar-server","text":"1. Levantar un servidor de desarrollo Django manage.py runserver 2. En el navegar para acceder al django admin http://127.0.0.1:8000/admin/","title":"LEVANTAR SERVER"},{"location":"DJANGO/CONFIGURAR%20ENTORNO%20DJANGO/#up-on-lan","text":"python3 manage.py runserver 0 .0.0.0:8000 For all: ALLOWED_HOSTS = [ '*' ] -- Es posible que deba agregar su direcci\u00f3n IP de LAN a ALLOWED_HOSTS en settings.py","title":"| Up on LAN"},{"location":"DJANGO/CONFIGURAR%20ENTORNO%20DJANGO/#fonts","text":"Font: https://stackoverflow.com/questions/22144189/making-django-server-accessible-in-lan Font: https://stackoverflow.com/questions/24857158/commanderror-you-must-set-settings-allowed-hosts-if-debug-is-false/27792097 manage.py migration","title":"FONTS:"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/","text":"DEPLOY HEROKU - DJANGO FAST MODE 0. Up repo to GH Subimos nuestro resposotorio a GitHub InONELINE (IOL) git add . && git commit -m \"first commit\" && git push -u origin master 1. AGREGANDO PIPs necesarios: pip install gunicorn pip install psycopg2-binary pip install django-heroku In one line (IOL): pip install gunicorn && pip install psycopg2-binary && pip install django-heroku Actualizamos dependencias y verifiquemos que por error no hayamos agregado otras cosas dependencias globales. pip freeze > requirements.txt ISSUE psycopg2 Solution: sudo apt-get install --reinstall libpq-dev Font: https://stackoverflow.com/questions/11618898/pg-config-executable-not-found?page=2&tab=Votes 2. TESTEANDO gunicorn Gunicorn deberia funcionar sin errores apra nuestro deploy. python3 manage.py runserver 0 .0.0.0:8000 gunicorn APIRestDjango.wsgi Si estamos conectados remotamente usaremos ngrok para verificar gunicorn. ngrok http 8000 gunicorn APIRestDjango.wsgi 3. ADD Procfile Creamos el Procfile en la raiz de nuestro proyecto que necesitamos para que heroku pueda servir nuestro proyecto usando unicorn server. nano Procfile y dentro metemos este codigo que ejecuta unicorn, donde vemos el nombre de nuestro proyecto seguido de .wsgi web: gunicorn APIRestDjango.wsgi 4. Add Configs to Settings.py import django_heroku django_heroku.settings(locals()) 5. Update requirements and REPO Actualizamos las dependencias. pip freeze > requirements.txt Subimos los cambios. git add . git commit -m \"UPDATE HK configs\" git push -u origin -- OIL git add . && git commit -m \"UPDATE HK configs\" && git push -u origin 6. CREAR Y VINCULAR Heroku APP 1 Creamos una nueva app en heroku. 2 Vinculamos esa app a nuestro repositorio. 3 Habilitamos Automatic Deploys. 4 Desplegamos la rama donde est\u00e1 nuestro proyecto. 5 listo nuestro proyecto fue desplegado. 7. Migrando BD Es necesario migrar nuestra base de datos y para heroku usaremos PostgreSQL . 1. Listamos las apps de nuestro heroku. heroku apps 2. Nos enganchamos de es app heroku git:remote -a myaplication 3. Nos conectamos a la consola de nuestra app. heroku run bash 4. (En la ultima version heroku nos crea y conecta automaticamente a una base de datos PostgreSQL) 5 . Migramos nuestra base de datos python3 manage.py migrate 6. Crea un super usuario para acceder al admin del sistema. python3 manage.py createsuperuser Nos preguntar\u00e1, esto es para admitir contrase\u00f1a no segura y nosotros le damos aque si \"y\" Bypass password validation and create user anyway? [ y/N ] : ISSUE DEPLOY HEROKU Este error se da porque no activamos el free dynos y eso lo hacemos ingresando a Configure Dynos y deberia ya de estar activo: Listo eso seria todo para el deploy. FONTS: Video Principal TUTORIAL EXTENDIDO REQUERIMIENTOS: Tambien el HEROKU CLI que nos ayudar\u00e1 mucho a poder observar nuestros log sobre errores y algunas configuraciones extra. GitHub CLI que tambien nos ayudar\u00e1 gestionar nuestro repo desde consola. VIRTUAL ENV 1 Creamos nuestro entorno virtual hubicandonos en la carpeta de nuestro proyecto. virtualenv . 2. Activamos nuestro entorno. source bin/activate 3. Instalamos nuestras dependencias mas importantes en este nuevo entorno que aun no tiene nada de las dependencias que necesita nuestro proyecto. pip install django pip install djangorestframework 4. Exportamos nuestro requirements. pip freeze > requirements.txt 0. GitHub CLI 1 Configuramos nuestro repositorio y lo subiremos para tenerlo ya sincronizado y poder controlar nuestros cambios por si llegamos a fallar algo. git init 2. Cuando terminemos de crear nuestro repositorio al final nos pregunta si queremos o no vincular el repositiorio y le damos a enter. gh repo create 3. Ahora vamos a subirlo. git add . git commit -m \"first commit\" git push -u origin master InONELINE (IOL) git add . && git commit -m \"first commit\" && git push -u origin master 2. AGREGANDO PIPs necesarios: pip install gunicorn pip install psycopg2-binary pip install django-heroku In one line: pip install gunicorn && pip install psycopg2-binary && pip install django-heroku ISSUE con django-heroku Solution: sudo apt-get install --reinstall libpq-dev Font: https://stackoverflow.com/questions/11618898/pg-config-executable-not-found?page=2&tab=Votes 3. TESTEANDO SERVIDORES Es buena idea testear si nuestro proyecto est\u00e1 corriendo correctamente para ello debemos verificar en cada cambio su funcionamiento. python3 manage.py runserver 0 .0.0.0:8000 gunicorn APIRestDjango.wsgi Si estamos conectados remotamente usaremos ngrok para verificar gunicorn. ngrok http 8000 gunicorn APIRestDjango.wsgi 4. Procfile Creamos el Procfile en la raiz de nuestro proyecto que necesitamos para que heroku pueda servir nuestro proyecto usando unicorn server. nano Procfile y dentro metemos este codigo que ejecuta unicorn, donde vemos el nombre de nuestro proyecto seguido de .wsgi web: gunicorn APIRestDjango.wsgi 5. Add Configs to Settings.py import django_heroku django_heroku.settings(locals()) 6. Update REPO Actualizamos las dependencias. pip freeze > requirements.txt Subimos los cambios. git add . git commit -m \"first commit\" git push -u origin master 7. CREAR Y VINCULAR Heroku APP 1 Creamos una nueva app en heroku. 2 Vinculamos esa app a nuestro repositorio. 3 Habilitamos Automatic Deploys. 4 Desplegamos la rama donde est\u00e1 nuestro proyecto. 5 listo nuestro proyecto fue desplegado. 8. Migrando BD Es necesario migrar nuestra base de datos y para heroku usaremos PostgreSQL . 1. Listamos las apps de nuestro heroku. heroku apps 2. Nos enganchamos de es app heroku git:remote -a myaplication 3. Nos conectamos a la consola de nuestra app. heroku run bash 4. (En la ultima version heroku nos crea y conecta automaticamente a una base de datos PostgreSQL) 5 . Migramos nuestra base de datos python3 manage.py migrate 6. Crea un super usuario para acceder al admin del sistema. python3 manage.py createsuperuser Nos preguntar\u00e1, esto es para admitir contrase\u00f1a no segura y nosotros le damos aque si \"y\" Bypass password validation and create user anyway? [ y/N ] : ISSUE DEPLOY HEROKU Este error se da porque no activamos el free dynos y eso lo hacemos ingresando a Configure Dynos y deberia ya de estar activo: Listo eso seria todo para el deploy. FONTS: Video Principal","title":"DEPLOY HEROKU - DJANGO"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#deploy-heroku-django","text":"","title":"DEPLOY HEROKU - DJANGO"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#fast-mode","text":"","title":"FAST MODE"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#0-up-repo-to-gh","text":"Subimos nuestro resposotorio a GitHub InONELINE (IOL) git add . && git commit -m \"first commit\" && git push -u origin master","title":"0.  Up repo to GH"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#1-agregando-pips-necesarios","text":"pip install gunicorn pip install psycopg2-binary pip install django-heroku In one line (IOL): pip install gunicorn && pip install psycopg2-binary && pip install django-heroku Actualizamos dependencias y verifiquemos que por error no hayamos agregado otras cosas dependencias globales. pip freeze > requirements.txt","title":"1. AGREGANDO PIPs necesarios:"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#issue-psycopg2","text":"Solution: sudo apt-get install --reinstall libpq-dev Font: https://stackoverflow.com/questions/11618898/pg-config-executable-not-found?page=2&tab=Votes","title":"ISSUE psycopg2"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#2-testeando-gunicorn","text":"Gunicorn deberia funcionar sin errores apra nuestro deploy. python3 manage.py runserver 0 .0.0.0:8000 gunicorn APIRestDjango.wsgi Si estamos conectados remotamente usaremos ngrok para verificar gunicorn. ngrok http 8000 gunicorn APIRestDjango.wsgi","title":"2. TESTEANDO gunicorn"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#3-add-procfile","text":"Creamos el Procfile en la raiz de nuestro proyecto que necesitamos para que heroku pueda servir nuestro proyecto usando unicorn server. nano Procfile y dentro metemos este codigo que ejecuta unicorn, donde vemos el nombre de nuestro proyecto seguido de .wsgi web: gunicorn APIRestDjango.wsgi","title":"3. ADD Procfile"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#4-add-configs-to-settingspy","text":"import django_heroku django_heroku.settings(locals())","title":"4. Add Configs to Settings.py"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#5-update-requirements-and-repo","text":"Actualizamos las dependencias. pip freeze > requirements.txt Subimos los cambios. git add . git commit -m \"UPDATE HK configs\" git push -u origin -- OIL git add . && git commit -m \"UPDATE HK configs\" && git push -u origin","title":"5. Update requirements and REPO"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#6-crear-y-vincular-heroku-app","text":"1 Creamos una nueva app en heroku. 2 Vinculamos esa app a nuestro repositorio. 3 Habilitamos Automatic Deploys. 4 Desplegamos la rama donde est\u00e1 nuestro proyecto. 5 listo nuestro proyecto fue desplegado.","title":"6. CREAR Y VINCULAR Heroku APP"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#7-migrando-bd","text":"Es necesario migrar nuestra base de datos y para heroku usaremos PostgreSQL . 1. Listamos las apps de nuestro heroku. heroku apps 2. Nos enganchamos de es app heroku git:remote -a myaplication 3. Nos conectamos a la consola de nuestra app. heroku run bash 4. (En la ultima version heroku nos crea y conecta automaticamente a una base de datos PostgreSQL) 5 . Migramos nuestra base de datos python3 manage.py migrate 6. Crea un super usuario para acceder al admin del sistema. python3 manage.py createsuperuser Nos preguntar\u00e1, esto es para admitir contrase\u00f1a no segura y nosotros le damos aque si \"y\" Bypass password validation and create user anyway? [ y/N ] :","title":"7. Migrando BD"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#issue-deploy-heroku","text":"Este error se da porque no activamos el free dynos y eso lo hacemos ingresando a Configure Dynos y deberia ya de estar activo: Listo eso seria todo para el deploy.","title":"ISSUE DEPLOY HEROKU"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#fonts","text":"Video Principal","title":"FONTS:"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#tutorial-extendido","text":"","title":"TUTORIAL EXTENDIDO"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#requerimientos","text":"Tambien el HEROKU CLI que nos ayudar\u00e1 mucho a poder observar nuestros log sobre errores y algunas configuraciones extra. GitHub CLI que tambien nos ayudar\u00e1 gestionar nuestro repo desde consola.","title":"REQUERIMIENTOS:"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#virtual-env","text":"1 Creamos nuestro entorno virtual hubicandonos en la carpeta de nuestro proyecto. virtualenv . 2. Activamos nuestro entorno. source bin/activate 3. Instalamos nuestras dependencias mas importantes en este nuevo entorno que aun no tiene nada de las dependencias que necesita nuestro proyecto. pip install django pip install djangorestframework 4. Exportamos nuestro requirements. pip freeze > requirements.txt","title":"VIRTUAL ENV"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#0-github-cli","text":"1 Configuramos nuestro repositorio y lo subiremos para tenerlo ya sincronizado y poder controlar nuestros cambios por si llegamos a fallar algo. git init 2. Cuando terminemos de crear nuestro repositorio al final nos pregunta si queremos o no vincular el repositiorio y le damos a enter. gh repo create 3. Ahora vamos a subirlo. git add . git commit -m \"first commit\" git push -u origin master InONELINE (IOL) git add . && git commit -m \"first commit\" && git push -u origin master","title":"0. GitHub CLI"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#2-agregando-pips-necesarios","text":"pip install gunicorn pip install psycopg2-binary pip install django-heroku In one line: pip install gunicorn && pip install psycopg2-binary && pip install django-heroku","title":"2. AGREGANDO PIPs necesarios:"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#issue-con-django-heroku","text":"Solution: sudo apt-get install --reinstall libpq-dev Font: https://stackoverflow.com/questions/11618898/pg-config-executable-not-found?page=2&tab=Votes","title":"ISSUE con django-heroku"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#3-testeando-servidores","text":"Es buena idea testear si nuestro proyecto est\u00e1 corriendo correctamente para ello debemos verificar en cada cambio su funcionamiento. python3 manage.py runserver 0 .0.0.0:8000 gunicorn APIRestDjango.wsgi Si estamos conectados remotamente usaremos ngrok para verificar gunicorn. ngrok http 8000 gunicorn APIRestDjango.wsgi","title":"3. TESTEANDO SERVIDORES"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#4-procfile","text":"Creamos el Procfile en la raiz de nuestro proyecto que necesitamos para que heroku pueda servir nuestro proyecto usando unicorn server. nano Procfile y dentro metemos este codigo que ejecuta unicorn, donde vemos el nombre de nuestro proyecto seguido de .wsgi web: gunicorn APIRestDjango.wsgi","title":"4. Procfile"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#5-add-configs-to-settingspy","text":"import django_heroku django_heroku.settings(locals())","title":"5. Add Configs to Settings.py"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#6-update-repo","text":"Actualizamos las dependencias. pip freeze > requirements.txt Subimos los cambios. git add . git commit -m \"first commit\" git push -u origin master","title":"6. Update REPO"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#7-crear-y-vincular-heroku-app","text":"1 Creamos una nueva app en heroku. 2 Vinculamos esa app a nuestro repositorio. 3 Habilitamos Automatic Deploys. 4 Desplegamos la rama donde est\u00e1 nuestro proyecto. 5 listo nuestro proyecto fue desplegado.","title":"7. CREAR Y VINCULAR Heroku APP"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#8-migrando-bd","text":"Es necesario migrar nuestra base de datos y para heroku usaremos PostgreSQL . 1. Listamos las apps de nuestro heroku. heroku apps 2. Nos enganchamos de es app heroku git:remote -a myaplication 3. Nos conectamos a la consola de nuestra app. heroku run bash 4. (En la ultima version heroku nos crea y conecta automaticamente a una base de datos PostgreSQL) 5 . Migramos nuestra base de datos python3 manage.py migrate 6. Crea un super usuario para acceder al admin del sistema. python3 manage.py createsuperuser Nos preguntar\u00e1, esto es para admitir contrase\u00f1a no segura y nosotros le damos aque si \"y\" Bypass password validation and create user anyway? [ y/N ] :","title":"8. Migrando BD"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#issue-deploy-heroku_1","text":"Este error se da porque no activamos el free dynos y eso lo hacemos ingresando a Configure Dynos y deberia ya de estar activo: Listo eso seria todo para el deploy.","title":"ISSUE DEPLOY HEROKU"},{"location":"DJANGO/DEPLOY%20TO%20HEROKU%20-%20DJANGO/#fonts_1","text":"Video Principal","title":"FONTS:"},{"location":"DJANGO/PRACTICA%20API%20REST/","text":"Instala los paquetes de django en el entorno virtual pip install django Instalando Django Rest Framework pip install djangorestframework Enlistar requirements de nuestro entorno variable en un txt. pip freeze > requirements.txt Instalar los requisitos. pip install -r requirements.txt Run Server on LAN python3 manage.py runserver 0 .0.0.0:8000 SERIALIZADORES","title":"PRACTICA API REST"},{"location":"DJANGO/PRACTICA%20API%20REST/#serializadores","text":"","title":"SERIALIZADORES"},{"location":"DJANGO/Practica/","text":"Instalaciones ACTUALIZANDO NODE font: https://maximilianofernandez.net/actualizar-node-js-en-ubuntu/ Crear nuevo ng new CRUDAngularRESTAPI -- routing yes -- css Run SERVER (Metodos) ng serve ng serve --host 0.0.0.0 ng serve --open --host 0.0.0.0 --disable-host-check font: Angular on LAN SERVE CREANDO COMPNENTES ng g c component/navbar ng g c component/client-list ng g component component/client-list Clases Y Servicios ng g class model/client ng g service service/client","title":"Practica"},{"location":"DJANGO/Practica/#instalaciones","text":"","title":"Instalaciones"},{"location":"DJANGO/Practica/#actualizando-node","text":"font: https://maximilianofernandez.net/actualizar-node-js-en-ubuntu/","title":"ACTUALIZANDO NODE"},{"location":"DJANGO/Practica/#crear-nuevo","text":"ng new CRUDAngularRESTAPI -- routing yes -- css","title":"Crear nuevo"},{"location":"DJANGO/Practica/#run-server-metodos","text":"ng serve ng serve --host 0.0.0.0 ng serve --open --host 0.0.0.0 --disable-host-check font: Angular on LAN SERVE","title":"Run SERVER (Metodos)"},{"location":"DJANGO/Practica/#creando-compnentes","text":"ng g c component/navbar ng g c component/client-list ng g component component/client-list","title":"CREANDO COMPNENTES"},{"location":"DJANGO/Practica/#clases-y-servicios","text":"ng g class model/client ng g service service/client","title":"Clases Y Servicios"},{"location":"DJANGO/Project%20dj-prods-api/","text":"0 Preparando Entorno Creamos y activamos nuestro entorno virtual dj-prods-api . virtualenv dj-prods-api cd dj-prods-api source bin/activate | Es probable que necesitemos crear un enlace simbolico de python3 en .bashrc sudo ln -s /usr/bin/python3 /usr/bin/python 1 Paquetes Necesarios Instalamos los paquetes necesesarios. pip install django pip install djangorestframework OPTIONALS For GH and HK Enlistar requirements de nuestro entorno variable en un txt. para luego poderlo exportar. pip freeze > requirements.txt Iniciar y subir repositiorio para tener control sobre nuestro codigo y sus cambios. git init && git add . && gh repo create && git commit -m \"start and conect project\" && git push -u origin master && git config --get remote.origin.url o con lift - gbash: git start 2 Crando Proyecto y App DJango 1 Creamos un proyecto DJANGO nuevo: django-admin startproject DJprodsApi 2 Ingresamos al cd /DJprodsApi y creamos una aplicacion apirest : ./manage.py startapp apirest 3 Configs SQLite 1 migramos los datos a nuestra BD por defecto SQLite : ./manage.py migrate 2 Creando Super User para el ADMIN: ./manage.py createsuperuser 3 Testeamos el funcionamiento de nuestro proyecto: ./manage.py runserver LAN: ./manage.py runserver 0 .0.0.0:8000 | Para Server on LAN podemos o usar ngk necesitamos habilitar los hosts en JprodsApi/DJprodsApi/settings.py ALLOWED_HOSTS = [ '*' ] 4 Registrar Aplicacion 1 Nos dirigimos a JprodsApi/DJprodsApi/settings.py y agregamos a INSTALLED_APPS = [ #... #Estos dos valores: 'rest_framework' , 'apirest' ] 5 Creando MODELO 1 Nos hubicamos en JprodsApi/apirest/models.py no hay ningun modelo asi que agregamos una clase asi y tendriamos nuestro primer modelo. class Producto ( models . Model ): ##Atributos class Meta : verbose_name = ( \"Producto\" ) verbose_name_plural = ( \"Productos\" ) def __str__ ( self ): return self . name #name Cambia segun Atributo queramos regresar 2 Agregamos ##Atributos a nuestro modelo. class Producto ( models . Model ): nombres = models . CharField ( max_length = 50 ) marca = models . CharField ( max_length = 50 ) codigo = models . CharField ( max_length = 8 ) emailemp = models . EmailField ( max_length = 50 ) created = models . DateTimeField ( auto_now_add = True ) updated = models . DateTimeField ( auto_now = True ) class Meta : verbose_name = ( \"Producto\" ) verbose_name_plural = ( \"Productos\" ) def __str__ ( self ): return self . nombres 3 Ahora empaquetamos nuestra migracion con: ./manage.py makemigrations 4 Ahora si migramos nuestras nuevas makemigrations: ./manage.py migrate 5 Registramos nuestro modelo en JprodsApi/apirest/admin.py from django.contrib import admin from .models import Producto admin . site . register ( Producto , ProductoAdmin ) #Quita ProductoAdmin si no funciona Deberiamos de ver productos en nuestro admin al correr nuestro servidor. 6 ADMIN Config 1 Para esta config debemos agregar este codigo en nuestro JprodsApi/apirest/admin.py . from django.contrib import admin from .models import Producto #ADMING Config - para mostrar atributos de nuestros productos en el admin. class ProductoAdmin ( admin . ModelAdmin ): list_display = ( 'nombres' , 'marca' , 'codigo' , 'emailemp' ) admin . site . register ( Producto , ProductoAdmin ) 7 Serializers 1 Creamos un nuevo archivo con el nombre de serializers.py dentro de JprodsApi/apirest/ y agregamos este codigo. from rest_framework import serializers from .models import Producto class ProductoSerializer ( serializers . HyperlinkedModelSerializer ): class Meta : model = Producto fields = ( 'id' , 'nombres' , 'marca' , 'codigo' , 'emailemp' ) 8 Vistas 1 Ahora editamos JprodsApi/apirest/views.py . y agregamos. from rest_framework import viewsets from .serializers import ProductoSerializer from .models import Producto class ProductoViewSet ( viewsets . ModelViewSet ): queryset = Producto . objects . all () serializer_class = ProductoSerializer 9 URLS o Rutas 1 Ahora editamos JprodsApi/JprodsApi/urls.py . y agregamos. from django.contrib import admin from django.urls import path # urls from django.urls.conf import include from rest_framework import routers from apirest import views router = routers . DefaultRouter () router . register ( 'productos' , views . ProductoViewSet ) # urls ## urlpatterns = [ path ( 'admin/' , admin . site . urls ), # urls path ( 'api/' , include ( router . urls )) # urls ## ] 10 DRF Permisos De Escritura y Paginate Permisos de escritura 1 Agregamos el siguiente codigo al final de JprodsApi/DJprodsApi/settings.py : # Esto hace que se limite el acceso segun lo configuremos REST_FRAMEWORK = { 'DEFAULT_PERMISSION_CLASSES' : [ ## Habilitar para restringir escritura 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly' , ## Habilitar para todos los permisos #'rest_framework.permissions.AllowAny', ] , ## Activar estas dos para la paginate #'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination', #'PAGE_SIZE': 10 } Y listo esto har\u00e1 que ya no cualquiera con el enlace del api pueda enviar o modificar nuestros datos. 11 CRUD VISTAS BASADAS EN CLASES 1 Vamos a crear una nueva aplicaci\u00f3n llamada productos ./manage.py startapp productos 2 Registramos nuestra nueva app en settings.py del proyecto y deberia verse asi. INSTALLED_APPS = [ 'django.contrib.admin' , 'django.contrib.auth' , 'django.contrib.contenttypes' , 'django.contrib.sessions' , 'django.contrib.messages' , 'django.contrib.staticfiles' , 'rest_framework' , 'apirest' , 'productos' #Nueva app ] 3 Dentro de JprodsApi/productos/ crearemos un nuevo archivo llamado urls.py de momento lo dejamos sin nada. 4 Ahora abrimos JprodsApi/productos/views.py y agregamos estas lineas: from django.views.generic import ListView , DetailView , CreateView , UpdateView , DeleteView from apirest.models import Producto class ProductoListView ( ListView ): model = Cliente #template_name = \".html\" 5 Nos dirigimos a JprodsApi/JprodsApi/urls.py principal y a\u00f1adimos. Agregamos esta importaci\u00f3n: from productos.views import ProductoListView ## .5 Y el path de productos: urlpatterns = [ path ( 'admin/' , admin . site . urls ), # urls path ( 'api/' , include ( router . urls )), # urls ## path ( 'productos' , ProductoListView . as_view ( template_name = \"productos/index.html\" ), name = 'listar' ) ## .5 ] 6 Ahora creamos dentro de JprodsApi/productos/ Creamos una carpeta nueva llamada templates . 7 Luego dentro de JprodsApi/productos/templates crearemos otra carpeta llamada productos y dentro de esta index.html . 8 Agregamos este codigo a nuestro index.html : < h1 > Productos </ h1 > < ul > {% for producto in object_list %} < li > {{ producto.nombres }} - {{ producto.marca }} </ li > {% empty %} < li > No articles yet. </ li > {% endfor %} </ ul > yyy listo hasta aqui ya solo queda continuar con el dise\u00f1o. Agregando Atributos a nuestro modelo 1 Nos vamos a JprodsApi/apirest/models.py y agregamos otro atributo, de esta manera es necesario que tenga default=\"\" de lo contrario nos saldr\u00e1 un error al crear la migraci\u00f3n. precio = models . CharField ( max_length = 8 , default = \"\" ) 2 Ahora creamos la migraci\u00f3n y migramos. ./manage.py makemigrations ./manage.py migrate 3 Esto es adicional para la vista en el admin de nuestro producto, esto a\u00f1adira a la vista el valor del nuevo atributo, para ello agregamos nuestro atributo en JprodsApi/apirest/admin.py y deberia quedar asi: from .models import Producto class ProductoAdmin ( admin.ModelAdmin ) : #New Atributo list_display = ( 'nombres' , 'marca' , 'precio' , 'codigo' , 'emailemp' , 'id' ) admin.site.register ( Producto, ProductoAdmin ) PERMISOS CORS CORS HEADERS: Se produce un error al al tratar de acceder desde Angular, Vue, otros al servicio, cuando se trata de acceder al servicio especialmente cuando trabajamos en localhost font: https://www.stackhawk.com/blog/django-cors-guide/ pip install django-cors-headers En settings.py Agregar esto mas 'corsheaders.middleware.CorsMiddleware' , Y las rutas que tendran acceso: CORS_ALLOWED_ORIGINS = [ \"http://localhost:4200\" , \"http://127.0.0.1:4200\" ]","title":"Project dj prods api"},{"location":"DJANGO/Project%20dj-prods-api/#0-preparando-entorno","text":"Creamos y activamos nuestro entorno virtual dj-prods-api . virtualenv dj-prods-api cd dj-prods-api source bin/activate | Es probable que necesitemos crear un enlace simbolico de python3 en .bashrc sudo ln -s /usr/bin/python3 /usr/bin/python","title":"0 Preparando Entorno"},{"location":"DJANGO/Project%20dj-prods-api/#1-paquetes-necesarios","text":"Instalamos los paquetes necesesarios. pip install django pip install djangorestframework","title":"1 Paquetes Necesarios"},{"location":"DJANGO/Project%20dj-prods-api/#optionals-for-gh-and-hk","text":"Enlistar requirements de nuestro entorno variable en un txt. para luego poderlo exportar. pip freeze > requirements.txt Iniciar y subir repositiorio para tener control sobre nuestro codigo y sus cambios. git init && git add . && gh repo create && git commit -m \"start and conect project\" && git push -u origin master && git config --get remote.origin.url o con lift - gbash: git start","title":"OPTIONALS For GH  and  HK"},{"location":"DJANGO/Project%20dj-prods-api/#2-crando-proyecto-y-app-django","text":"1 Creamos un proyecto DJANGO nuevo: django-admin startproject DJprodsApi 2 Ingresamos al cd /DJprodsApi y creamos una aplicacion apirest : ./manage.py startapp apirest","title":"2 Crando Proyecto y App DJango"},{"location":"DJANGO/Project%20dj-prods-api/#3-configs-sqlite","text":"1 migramos los datos a nuestra BD por defecto SQLite : ./manage.py migrate 2 Creando Super User para el ADMIN: ./manage.py createsuperuser 3 Testeamos el funcionamiento de nuestro proyecto: ./manage.py runserver LAN: ./manage.py runserver 0 .0.0.0:8000 | Para Server on LAN podemos o usar ngk necesitamos habilitar los hosts en JprodsApi/DJprodsApi/settings.py ALLOWED_HOSTS = [ '*' ]","title":"3 Configs SQLite"},{"location":"DJANGO/Project%20dj-prods-api/#4-registrar-aplicacion","text":"1 Nos dirigimos a JprodsApi/DJprodsApi/settings.py y agregamos a INSTALLED_APPS = [ #... #Estos dos valores: 'rest_framework' , 'apirest' ]","title":"4 Registrar Aplicacion"},{"location":"DJANGO/Project%20dj-prods-api/#5-creando-modelo","text":"1 Nos hubicamos en JprodsApi/apirest/models.py no hay ningun modelo asi que agregamos una clase asi y tendriamos nuestro primer modelo. class Producto ( models . Model ): ##Atributos class Meta : verbose_name = ( \"Producto\" ) verbose_name_plural = ( \"Productos\" ) def __str__ ( self ): return self . name #name Cambia segun Atributo queramos regresar 2 Agregamos ##Atributos a nuestro modelo. class Producto ( models . Model ): nombres = models . CharField ( max_length = 50 ) marca = models . CharField ( max_length = 50 ) codigo = models . CharField ( max_length = 8 ) emailemp = models . EmailField ( max_length = 50 ) created = models . DateTimeField ( auto_now_add = True ) updated = models . DateTimeField ( auto_now = True ) class Meta : verbose_name = ( \"Producto\" ) verbose_name_plural = ( \"Productos\" ) def __str__ ( self ): return self . nombres 3 Ahora empaquetamos nuestra migracion con: ./manage.py makemigrations 4 Ahora si migramos nuestras nuevas makemigrations: ./manage.py migrate 5 Registramos nuestro modelo en JprodsApi/apirest/admin.py from django.contrib import admin from .models import Producto admin . site . register ( Producto , ProductoAdmin ) #Quita ProductoAdmin si no funciona Deberiamos de ver productos en nuestro admin al correr nuestro servidor.","title":"5 Creando MODELO"},{"location":"DJANGO/Project%20dj-prods-api/#6-admin-config","text":"1 Para esta config debemos agregar este codigo en nuestro JprodsApi/apirest/admin.py . from django.contrib import admin from .models import Producto #ADMING Config - para mostrar atributos de nuestros productos en el admin. class ProductoAdmin ( admin . ModelAdmin ): list_display = ( 'nombres' , 'marca' , 'codigo' , 'emailemp' ) admin . site . register ( Producto , ProductoAdmin )","title":"6 ADMIN Config"},{"location":"DJANGO/Project%20dj-prods-api/#7-serializers","text":"1 Creamos un nuevo archivo con el nombre de serializers.py dentro de JprodsApi/apirest/ y agregamos este codigo. from rest_framework import serializers from .models import Producto class ProductoSerializer ( serializers . HyperlinkedModelSerializer ): class Meta : model = Producto fields = ( 'id' , 'nombres' , 'marca' , 'codigo' , 'emailemp' )","title":"7 Serializers"},{"location":"DJANGO/Project%20dj-prods-api/#8-vistas","text":"1 Ahora editamos JprodsApi/apirest/views.py . y agregamos. from rest_framework import viewsets from .serializers import ProductoSerializer from .models import Producto class ProductoViewSet ( viewsets . ModelViewSet ): queryset = Producto . objects . all () serializer_class = ProductoSerializer","title":"8 Vistas"},{"location":"DJANGO/Project%20dj-prods-api/#9-urls-o-rutas","text":"1 Ahora editamos JprodsApi/JprodsApi/urls.py . y agregamos. from django.contrib import admin from django.urls import path # urls from django.urls.conf import include from rest_framework import routers from apirest import views router = routers . DefaultRouter () router . register ( 'productos' , views . ProductoViewSet ) # urls ## urlpatterns = [ path ( 'admin/' , admin . site . urls ), # urls path ( 'api/' , include ( router . urls )) # urls ## ]","title":"9 URLS o Rutas"},{"location":"DJANGO/Project%20dj-prods-api/#10-drf-permisos-de-escritura-y-paginate","text":"Permisos de escritura 1 Agregamos el siguiente codigo al final de JprodsApi/DJprodsApi/settings.py : # Esto hace que se limite el acceso segun lo configuremos REST_FRAMEWORK = { 'DEFAULT_PERMISSION_CLASSES' : [ ## Habilitar para restringir escritura 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly' , ## Habilitar para todos los permisos #'rest_framework.permissions.AllowAny', ] , ## Activar estas dos para la paginate #'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination', #'PAGE_SIZE': 10 } Y listo esto har\u00e1 que ya no cualquiera con el enlace del api pueda enviar o modificar nuestros datos.","title":"10 DRF Permisos De Escritura y Paginate"},{"location":"DJANGO/Project%20dj-prods-api/#11-crud-vistas-basadas-en-clases","text":"1 Vamos a crear una nueva aplicaci\u00f3n llamada productos ./manage.py startapp productos 2 Registramos nuestra nueva app en settings.py del proyecto y deberia verse asi. INSTALLED_APPS = [ 'django.contrib.admin' , 'django.contrib.auth' , 'django.contrib.contenttypes' , 'django.contrib.sessions' , 'django.contrib.messages' , 'django.contrib.staticfiles' , 'rest_framework' , 'apirest' , 'productos' #Nueva app ] 3 Dentro de JprodsApi/productos/ crearemos un nuevo archivo llamado urls.py de momento lo dejamos sin nada. 4 Ahora abrimos JprodsApi/productos/views.py y agregamos estas lineas: from django.views.generic import ListView , DetailView , CreateView , UpdateView , DeleteView from apirest.models import Producto class ProductoListView ( ListView ): model = Cliente #template_name = \".html\" 5 Nos dirigimos a JprodsApi/JprodsApi/urls.py principal y a\u00f1adimos. Agregamos esta importaci\u00f3n: from productos.views import ProductoListView ## .5 Y el path de productos: urlpatterns = [ path ( 'admin/' , admin . site . urls ), # urls path ( 'api/' , include ( router . urls )), # urls ## path ( 'productos' , ProductoListView . as_view ( template_name = \"productos/index.html\" ), name = 'listar' ) ## .5 ] 6 Ahora creamos dentro de JprodsApi/productos/ Creamos una carpeta nueva llamada templates . 7 Luego dentro de JprodsApi/productos/templates crearemos otra carpeta llamada productos y dentro de esta index.html . 8 Agregamos este codigo a nuestro index.html : < h1 > Productos </ h1 > < ul > {% for producto in object_list %} < li > {{ producto.nombres }} - {{ producto.marca }} </ li > {% empty %} < li > No articles yet. </ li > {% endfor %} </ ul > yyy listo hasta aqui ya solo queda continuar con el dise\u00f1o.","title":"11 CRUD VISTAS BASADAS EN CLASES"},{"location":"DJANGO/Project%20dj-prods-api/#agregando-atributos-a-nuestro-modelo","text":"1 Nos vamos a JprodsApi/apirest/models.py y agregamos otro atributo, de esta manera es necesario que tenga default=\"\" de lo contrario nos saldr\u00e1 un error al crear la migraci\u00f3n. precio = models . CharField ( max_length = 8 , default = \"\" ) 2 Ahora creamos la migraci\u00f3n y migramos. ./manage.py makemigrations ./manage.py migrate 3 Esto es adicional para la vista en el admin de nuestro producto, esto a\u00f1adira a la vista el valor del nuevo atributo, para ello agregamos nuestro atributo en JprodsApi/apirest/admin.py y deberia quedar asi: from .models import Producto class ProductoAdmin ( admin.ModelAdmin ) : #New Atributo list_display = ( 'nombres' , 'marca' , 'precio' , 'codigo' , 'emailemp' , 'id' ) admin.site.register ( Producto, ProductoAdmin )","title":"Agregando Atributos a nuestro modelo"},{"location":"DJANGO/Project%20dj-prods-api/#permisos-cors","text":"","title":"PERMISOS CORS"},{"location":"DJANGO/Project%20dj-prods-api/#cors-headers","text":"Se produce un error al al tratar de acceder desde Angular, Vue, otros al servicio, cuando se trata de acceder al servicio especialmente cuando trabajamos en localhost font: https://www.stackhawk.com/blog/django-cors-guide/ pip install django-cors-headers En settings.py Agregar esto mas 'corsheaders.middleware.CorsMiddleware' , Y las rutas que tendran acceso: CORS_ALLOWED_ORIGINS = [ \"http://localhost:4200\" , \"http://127.0.0.1:4200\" ]","title":"CORS HEADERS:"},{"location":"DOCKER/DockerFile/","text":"1 Creando un Dockerfile Dockerfile nos sirve para construir nuestra imagen FROM ubuntu:20.04 MAINTAINER Frank frankwilsonknow@gmail.com ARG DEBIAN_FRONTEND = noninteractive RUN apt-get update RUN apt-get -y install apache2 EXPOSE 80 CMD /usr/sbin/apache2ctl -D FOREGROUND Nos hubicamos en la misma carpeta de donde est\u00e1 nuestro Dockerfile y ejecutamos este codigo apra construir nuestra imagen . sudo docker build -t Nombre_de_Imagen . Luego de que se construya vamos a verificar con el comando sudo docker images la existencia de nuestra nueva imagen creada. sudo docker run -dit -p 8053 :80 --name nuevo-nombre Nombre_de_Imagen Abrir terminal de un contenedor sudo docker exec -it nombre-contenedor /bin/bash","title":"DockerFile"},{"location":"DOCKER/DockerFile/#1-creando-un-dockerfile","text":"Dockerfile nos sirve para construir nuestra imagen FROM ubuntu:20.04 MAINTAINER Frank frankwilsonknow@gmail.com ARG DEBIAN_FRONTEND = noninteractive RUN apt-get update RUN apt-get -y install apache2 EXPOSE 80 CMD /usr/sbin/apache2ctl -D FOREGROUND Nos hubicamos en la misma carpeta de donde est\u00e1 nuestro Dockerfile y ejecutamos este codigo apra construir nuestra imagen . sudo docker build -t Nombre_de_Imagen . Luego de que se construya vamos a verificar con el comando sudo docker images la existencia de nuestra nueva imagen creada. sudo docker run -dit -p 8053 :80 --name nuevo-nombre Nombre_de_Imagen","title":"1 Creando un Dockerfile"},{"location":"DOCKER/DockerFile/#abrir-terminal-de-un-contenedor","text":"sudo docker exec -it nombre-contenedor /bin/bash","title":"Abrir terminal de un contenedor"},{"location":"DPI/","text":"TRASH-CLI (papelera) Trash-cli es una herramienta para poder --- Exportar PATH Este metodo nos ayuda a que hagamos globales nuestra carpeta que contiene binarios o scripts para de esa manera poderlos llamar desde cualquier lugar. Ejemplo: A\u00d1ADIMOS estas lienas a nuestro .bashrc PATH = \" $PATH :/usr/games\" export PATH para que esto sea permanente FONT: https://rootsudo.wordpress.com/2014/04/06/el-path-la-ruta-de-linux-variables-de-entorno/","title":"TRASH-CLI (papelera)"},{"location":"DPI/#trash-cli-papelera","text":"Trash-cli es una herramienta para poder","title":"TRASH-CLI (papelera)"},{"location":"DPI/#-","text":"","title":"---"},{"location":"DPI/#exportar-path","text":"Este metodo nos ayuda a que hagamos globales nuestra carpeta que contiene binarios o scripts para de esa manera poderlos llamar desde cualquier lugar. Ejemplo: A\u00d1ADIMOS estas lienas a nuestro .bashrc PATH = \" $PATH :/usr/games\" export PATH para que esto sea permanente FONT: https://rootsudo.wordpress.com/2014/04/06/el-path-la-ruta-de-linux-variables-de-entorno/","title":"Exportar PATH"},{"location":"DPI/Bash-Games/","text":"COWSAY - FORTUNE Install 1 Command sudo apt-get install cowsay 2 PATHearemos la ruta donde se instal\u00f3 Cowsay y Fortune guardando esta ruta en nuestro .bashrc PATH = \" $PATH :/usr/games\" export PATH !# Ahora ya tenemos instalado cowsay Font: https://raspberrypi.stackexchange.com/questions/1091/cowsay-not-working 3 Fortune necesita de una libreria de datos llamada fortunes para decirnos algo podemos elegir entre fortunes-min y fortunes-es sudo apt-get update sudo apt-get install fortunes-es USOS cowsay hola mundo fortune | cowsay Cambiando a cow por tux linux: fortune | cowsay -f tux Para espa\u00f1ol: fortune es | cowsay VARIAS LINEAS ( echo -e \"BASH manual\\n\" ; echo -e \"Local BASH manual\\n\" ; echo -e \"BASH repo\\n\" ; echo -e \"BASH\" ) \\ | cowthink -W80 -f tux Font: https://unix.stackexchange.com/questions/133902/is-it-possible-to-inject-newlines-in-the-ouput-of-cowsay-cowthink-while-preservi FIGlet & Toilet Crea banners de texto AscII desde la terminal Install sudo apt install figlet toilet Ejemplos de uso Para cambiar a una fuente en particular, utilizaremos la opci\u00f3n -f. Las fuentes se van a leer desde el mismo directorio que cuando utilizamos FIGlet. toilet -f future Ubunlog.com Si queremos que la salida se cree en el centro, utilizaremos el argumento -c. Para ello abriremos una terminal (Ctrl+Alt+T) y escribimos en ella: figlet -c Ubunlog.com FONT: https://ubunlog.com/figlet-banners-ascii-terminal/","title":"COWSAY - FORTUNE"},{"location":"DPI/Bash-Games/#cowsay-fortune","text":"","title":"COWSAY - FORTUNE"},{"location":"DPI/Bash-Games/#install","text":"1 Command sudo apt-get install cowsay 2 PATHearemos la ruta donde se instal\u00f3 Cowsay y Fortune guardando esta ruta en nuestro .bashrc PATH = \" $PATH :/usr/games\" export PATH !# Ahora ya tenemos instalado cowsay Font: https://raspberrypi.stackexchange.com/questions/1091/cowsay-not-working 3 Fortune necesita de una libreria de datos llamada fortunes para decirnos algo podemos elegir entre fortunes-min y fortunes-es","title":"Install"},{"location":"DPI/Bash-Games/#sudo-apt-get-update-sudo-apt-get-install-fortunes-es","text":"","title":"sudo apt-get update\nsudo apt-get install fortunes-es\n"},{"location":"DPI/Bash-Games/#usos","text":"cowsay hola mundo fortune | cowsay Cambiando a cow por tux linux: fortune | cowsay -f tux Para espa\u00f1ol: fortune es | cowsay","title":"USOS"},{"location":"DPI/Bash-Games/#varias-lineas","text":"( echo -e \"BASH manual\\n\" ; echo -e \"Local BASH manual\\n\" ; echo -e \"BASH repo\\n\" ; echo -e \"BASH\" ) \\ | cowthink -W80 -f tux Font: https://unix.stackexchange.com/questions/133902/is-it-possible-to-inject-newlines-in-the-ouput-of-cowsay-cowthink-while-preservi","title":"VARIAS LINEAS"},{"location":"DPI/Bash-Games/#figlet-toilet","text":"Crea banners de texto AscII desde la terminal","title":"FIGlet &amp; Toilet"},{"location":"DPI/Bash-Games/#install_1","text":"sudo apt install figlet toilet","title":"Install"},{"location":"DPI/Bash-Games/#ejemplos-de-uso","text":"Para cambiar a una fuente en particular, utilizaremos la opci\u00f3n -f. Las fuentes se van a leer desde el mismo directorio que cuando utilizamos FIGlet. toilet -f future Ubunlog.com Si queremos que la salida se cree en el centro, utilizaremos el argumento -c. Para ello abriremos una terminal (Ctrl+Alt+T) y escribimos en ella: figlet -c Ubunlog.com FONT: https://ubunlog.com/figlet-banners-ascii-terminal/","title":"Ejemplos de uso"},{"location":"DPI/GITBASH/","text":"REQUISITOS Github Heroku CLI GitHub CLI 1 INICIAR SESIONES","title":"GITBASH"},{"location":"DPI/GITBASH/#requisitos","text":"Github Heroku CLI GitHub CLI","title":"REQUISITOS"},{"location":"DPI/GITBASH/#1-iniciar-sesiones","text":"","title":"1 INICIAR SESIONES"},{"location":"DPI/NANO/","text":"## MOSTRAR NUMERO DE LINEAS Para eso presionamos alt + altGR + 3 font: https://askubuntu.com/questions/73444/how-to-show-line-numbering-in-nano-when-opening-a-file#:~:text=The%20keyboard%20combination%20to%20display,using%20nano%20is%20CTRL%20%2B%20C%20. MARKDOWN Syntax Highlighting 1 Nos dirigimos a: cd /usr/share/nano/ 2 Creamos o editamos: sudo nano /usr/share/nano/markdown.nanorc 3 Agregamos este codigo: syntax \"markdown\" \"\\.md $ \" \"\\.markdown $ \" ## Quotations color cyan \"^>.*\" ## Emphasis color green \"_[^_]*_\" color green \"\\*[^\\*]*\\*\" ## Strong emphasis color brightgreen \"\\*\\*[^\\*]*\\*\\*\" color brightgreen \"__[\\_]*__\" ## Underline headers color brightblue \"^====(=*)\" color brightblue \"^----(-*)\" ## Hash headers color brightblue \"^#.*\" ## Linkified URLs (and inline html tags) color brightmagenta start = \"<\" end = \">\" ## Links color brightmagenta \"\\[.*\\](\\([^\\)]*\\))?\" ## Link id's: color brightmagenta \"^\\[.*\\]:( )+.*\" ## Code spans color brightyellow \"`[^`]*`\" ## Links and inline images color brightmagenta start = \"!\\[\" end = \"\\]\" color brightmagenta start = \"\\[\" end = \"\\]\" ## Lists color yellow \"^( )*(\\*|\\+|\\-|[0-9]+\\.) \" Font: https://ourcodeworld.com/articles/read/807/how-to-enable-syntax-highlighting-for-markdown-files-in-gnu-nano","title":"NANO"},{"location":"DPI/NANO/#markdown-syntax-highlighting","text":"1 Nos dirigimos a: cd /usr/share/nano/ 2 Creamos o editamos: sudo nano /usr/share/nano/markdown.nanorc 3 Agregamos este codigo: syntax \"markdown\" \"\\.md $ \" \"\\.markdown $ \" ## Quotations color cyan \"^>.*\" ## Emphasis color green \"_[^_]*_\" color green \"\\*[^\\*]*\\*\" ## Strong emphasis color brightgreen \"\\*\\*[^\\*]*\\*\\*\" color brightgreen \"__[\\_]*__\" ## Underline headers color brightblue \"^====(=*)\" color brightblue \"^----(-*)\" ## Hash headers color brightblue \"^#.*\" ## Linkified URLs (and inline html tags) color brightmagenta start = \"<\" end = \">\" ## Links color brightmagenta \"\\[.*\\](\\([^\\)]*\\))?\" ## Link id's: color brightmagenta \"^\\[.*\\]:( )+.*\" ## Code spans color brightyellow \"`[^`]*`\" ## Links and inline images color brightmagenta start = \"!\\[\" end = \"\\]\" color brightmagenta start = \"\\[\" end = \"\\]\" ## Lists color yellow \"^( )*(\\*|\\+|\\-|[0-9]+\\.) \" Font: https://ourcodeworld.com/articles/read/807/how-to-enable-syntax-highlighting-for-markdown-files-in-gnu-nano","title":"MARKDOWN Syntax Highlighting"},{"location":"DPI/NGROK/","text":"EJECUTAR ngrok http 80 FONTS Video Principal","title":"NGROK"},{"location":"DPI/NGROK/#ejecutar","text":"ngrok http 80","title":"EJECUTAR"},{"location":"DPI/NGROK/#fonts","text":"Video Principal","title":"FONTS"},{"location":"DPI/USUARIOS%20Y%20PERMISOS/","text":"A\u00d1ADIENDO NUEVO USUARIO Crear nuevo: adduser usertest Por si queremos eliminar la contrase\u00f1a de un usario especifico: sudo passwd -d usertest -- Esto nos ayudar\u00e1 a mejorar la experiencia de usuario al usar el comando sudo INICIAR SESION NUEVO USUARIO su usertest DAR PERMISOS ROOT A NUEVO USUARIO Esto permitir\u00e1 que nuestro usuario nuevo pueda hacer uso de sudo para tener privilegios de superusuario. usermod -aG sudo usertest -- Ahora cada vez que escribamos sudo nos pedir\u00e1 una contrase\u00f1a para realizar alguna acci\u00f3n de s\u00faper usuario y si no tenemos preestablecido una contrase\u00f1a pues simplemente bastar\u00e1 con escribir sudo. MODIFICAR O A\u00d1ADIR CONTRASE\u00d1A sudo passwd usertest ELIMINAR USUARIO sudo userdel usertest LISTAR USUARIOS EXISTENTES cat /etc/passwd | cut -d \":\" -f1 Quitar PASSWD a SUDO sudo visudo En la parte inferior del archivo, agregue la siguiente l\u00ednea: $USER ALL =( ALL ) NOPASSWD: ALL Y %sudo ALL =( ALL ) NOPASSWD: ALL -- Este fuincion\u00f3 luego de agregar esta linea desde el usuario logeado (pueda funcionar en algunos casos) fonts: - https://askubuntu.com/questions/147241/execute-sudo-without-password - https://askubuntu.com/questions/334318/sudoers-file-enable-nopasswd-for-user-all-commands ?Este suepuestamente Sirve para dar permisos a un grupo # Los miembros del grupo de administraci\u00f3n pueden obtener privilegios de root %admin ALL =( ALL ) ALL","title":"USUARIOS Y PERMISOS"},{"location":"DPI/USUARIOS%20Y%20PERMISOS/#anadiendo-nuevo-usuario","text":"Crear nuevo: adduser usertest Por si queremos eliminar la contrase\u00f1a de un usario especifico: sudo passwd -d usertest -- Esto nos ayudar\u00e1 a mejorar la experiencia de usuario al usar el comando sudo","title":"A\u00d1ADIENDO NUEVO USUARIO"},{"location":"DPI/USUARIOS%20Y%20PERMISOS/#iniciar-sesion-nuevo-usuario","text":"su usertest","title":"INICIAR SESION NUEVO USUARIO"},{"location":"DPI/USUARIOS%20Y%20PERMISOS/#dar-permisos-root-a-nuevo-usuario","text":"Esto permitir\u00e1 que nuestro usuario nuevo pueda hacer uso de sudo para tener privilegios de superusuario. usermod -aG sudo usertest -- Ahora cada vez que escribamos sudo nos pedir\u00e1 una contrase\u00f1a para realizar alguna acci\u00f3n de s\u00faper usuario y si no tenemos preestablecido una contrase\u00f1a pues simplemente bastar\u00e1 con escribir sudo.","title":"DAR PERMISOS ROOT A NUEVO USUARIO"},{"location":"DPI/USUARIOS%20Y%20PERMISOS/#modificar-o-anadir-contrasena","text":"sudo passwd usertest","title":"MODIFICAR O A\u00d1ADIR CONTRASE\u00d1A"},{"location":"DPI/USUARIOS%20Y%20PERMISOS/#eliminar-usuario","text":"sudo userdel usertest","title":"ELIMINAR USUARIO"},{"location":"DPI/USUARIOS%20Y%20PERMISOS/#listar-usuarios-existentes","text":"cat /etc/passwd | cut -d \":\" -f1","title":"LISTAR USUARIOS EXISTENTES"},{"location":"DPI/USUARIOS%20Y%20PERMISOS/#quitar-passwd-a-sudo","text":"sudo visudo En la parte inferior del archivo, agregue la siguiente l\u00ednea: $USER ALL =( ALL ) NOPASSWD: ALL Y %sudo ALL =( ALL ) NOPASSWD: ALL -- Este fuincion\u00f3 luego de agregar esta linea desde el usuario logeado (pueda funcionar en algunos casos) fonts: - https://askubuntu.com/questions/147241/execute-sudo-without-password - https://askubuntu.com/questions/334318/sudoers-file-enable-nopasswd-for-user-all-commands","title":"Quitar PASSWD a SUDO"},{"location":"DPI/USUARIOS%20Y%20PERMISOS/#este-suepuestamente","text":"Sirve para dar permisos a un grupo # Los miembros del grupo de administraci\u00f3n pueden obtener privilegios de root %admin ALL =( ALL ) ALL","title":"?Este suepuestamente"},{"location":"DPI/httpie/","text":"HTTPie Es una aplicaci\u00f3n similar a postman que nos permite realizar pruebas API. Es un cliente HTTP que nos da la posibilidad de testear 'HTTP requests' a trav\u00e9s de consola. LOGIN JWT POST LOGIN DATA http post http://192.168.0.130:8000/api-token-auth/ username = franz password = ******* Resultado referencia: GET DATA Usamos el token que nos gener\u00f3 de esta manera: http get http://192.168.0.130:8000/api/usuarios/ \"Authorization: token 80488277b413ed5e26d857ef745664e63162b26a\" Resultado referencia: - Listo de esta manera ya obtendriamos nuestra data haciendo uso del token. POST DATA http post http://192.168.0.130:8000/api/usuarios/ \"Authorization: token 80488277b413ed5e26d857ef745664e63162b26a\" sexo = f f_nacimiento = 121211 estatura = 150 peso_kg = 30 Resultado referencia:","title":"HTTPie"},{"location":"DPI/httpie/#httpie","text":"Es una aplicaci\u00f3n similar a postman que nos permite realizar pruebas API. Es un cliente HTTP que nos da la posibilidad de testear 'HTTP requests' a trav\u00e9s de consola.","title":"HTTPie"},{"location":"DPI/httpie/#login-jwt","text":"","title":"LOGIN JWT"},{"location":"DPI/httpie/#post-login-data","text":"http post http://192.168.0.130:8000/api-token-auth/ username = franz password = ******* Resultado referencia:","title":"POST LOGIN DATA"},{"location":"DPI/httpie/#get-data","text":"Usamos el token que nos gener\u00f3 de esta manera: http get http://192.168.0.130:8000/api/usuarios/ \"Authorization: token 80488277b413ed5e26d857ef745664e63162b26a\" Resultado referencia: - Listo de esta manera ya obtendriamos nuestra data haciendo uso del token.","title":"GET DATA"},{"location":"DPI/httpie/#post-data","text":"http post http://192.168.0.130:8000/api/usuarios/ \"Authorization: token 80488277b413ed5e26d857ef745664e63162b26a\" sexo = f f_nacimiento = 121211 estatura = 150 peso_kg = 30 Resultado referencia:","title":"POST DATA"},{"location":"DPI/tree/","text":"sudo apt-get install tree Font: https://www.tecmint.com/linux-tree-command-examples/","title":"Tree"},{"location":"DPI/NEOVIM/BRACEY/","text":"INSTALL BRACEY - NVIM 1 Registramos nuestro plugin en Plug 'turbio/bracey.vim' Verificamos las rutas de python por si nos da errores y lo otro seria buscar la carpeta del plugin y verificar si corre el servidor o los requerimientos que necesite su server. Pueda que necesitemos esto por si llega a fallar nuestro Bracey sudo npm install websocket 2 Pegamos esta configuraci\u00f3n en nuestro init.vim \"\"Bracey config \"El allow remote connections, nos servir\u00e1 apra habilitar vistas en LAN. let g:bracey_server_allow_remote_connections = 1 \"Server_port nos sirve para especificar el puerto y no tener un aleatorio. let g:bracey_server_port = 33461","title":"BRACEY"},{"location":"DPI/NEOVIM/BRACEY/#install-bracey-nvim","text":"1 Registramos nuestro plugin en Plug 'turbio/bracey.vim' Verificamos las rutas de python por si nos da errores y lo otro seria buscar la carpeta del plugin y verificar si corre el servidor o los requerimientos que necesite su server. Pueda que necesitemos esto por si llega a fallar nuestro Bracey sudo npm install websocket 2 Pegamos esta configuraci\u00f3n en nuestro init.vim \"\"Bracey config \"El allow remote connections, nos servir\u00e1 apra habilitar vistas en LAN. let g:bracey_server_allow_remote_connections = 1 \"Server_port nos sirve para especificar el puerto y no tener un aleatorio. let g:bracey_server_port = 33461","title":"INSTALL BRACEY - NVIM"},{"location":"DPI/NEOVIM/MARKDOWN%20Config/","text":"Esto para que no tengamos problemas con vim cuando nos oculta el codigo o simbolos en ocaciones. autocmd InsertEnter *. { markdown,md } set conceallevel = 0 autocmd InsertLeave *. { markdown,md } set conceallevel = 2 Font: https://github.com/plasticboy/vim-markdown/issues/253","title":"MARKDOWN Config"},{"location":"DPI/NEOVIM/NEOVIM/","text":"1 NEOVIM INSTALL sudo apt update sudo apt install neovim -y 2 Pre-Instalar VIM-PLUG sh -c 'curl -fLo \"${XDG_DATA_HOME:-$HOME/.local/share}\"/nvim/site/autoload/plug.vim --create-dirs \\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim' 3 Configurando nvim para los plugins y personalizaci\u00f3n Iniciamos nvim Cree un directorio para contener el archivo init.vim :call mkdir ( stdpath ( 'config' ) , 'p' ) Luego cree un archivo init.vim :exe 'edit ' .stdpath ( 'config' ) . '/init.vim' Estas instrucciones se obtienen usando el comando :h nvim y luego se pega dentro de nvim, aunque no crea nada pero asumimos que clonando esto ayudar\u00e1. 4 Importando configuraciones - Clonaremos la configuracion basica desde github en la carpeta git clone https://github.com/LFrakie/nvim-rpi-dpi.git $HOME /.config/nvim - Luego ingresamos a nvim y ejecutamos :PlugInstall dentro de nvim para instalar los plugins. Y listo con esto deber\u00eda quedar, aunque es probable que si variamos de rutas estas se rompan y debamos actualizarlas ISSUES Error cuando abre nvim [coc.nvim] build/index.js not found, please install dependencies and compile coc.nvim by: yarn install&lt;br/&gt;Press ENTER or type command to continue Solution: cd $HOME /.config/nvim/plugged/coc.nvim yarn install cd $HOME /.config/nvim/plugged/coc.nvim sudo yarn build Font: https://www.programmerall.com/article/92702244754/ Por si da este error del ( coc aplicar build ) usamos este comando para actualizarlo :PlugUpdate INSTALAR \u00daltimas Versiones -- versi\u00f3n beta v 0.6.0 PPA (Hasta la fecha actual - agosto 2021) -- sudo apt-get install software-properties-common -y sudo add-apt-repository ppa:neovim-ppa/unstable -y sudo apt-get update sudo apt-get install neovim -y [https://frankmwilsonm.github.io/wasm-js-bm/](https://frankmwilsonm.github.io/wasm-js-bm/) https://frankmwilsonm.github.io/wasm-js-bm/","title":"1 NEOVIM INSTALL"},{"location":"DPI/NEOVIM/NEOVIM/#1-neovim-install","text":"sudo apt update sudo apt install neovim -y","title":"1 NEOVIM INSTALL"},{"location":"DPI/NEOVIM/NEOVIM/#2-pre-instalar-vim-plug","text":"sh -c 'curl -fLo \"${XDG_DATA_HOME:-$HOME/.local/share}\"/nvim/site/autoload/plug.vim --create-dirs \\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'","title":"2 Pre-Instalar VIM-PLUG"},{"location":"DPI/NEOVIM/NEOVIM/#3-configurando-nvim-para-los-plugins-y-personalizacion","text":"Iniciamos nvim Cree un directorio para contener el archivo init.vim :call mkdir ( stdpath ( 'config' ) , 'p' ) Luego cree un archivo init.vim :exe 'edit ' .stdpath ( 'config' ) . '/init.vim' Estas instrucciones se obtienen usando el comando :h nvim y luego se pega dentro de nvim, aunque no crea nada pero asumimos que clonando esto ayudar\u00e1.","title":"3 Configurando nvim para los plugins y personalizaci\u00f3n"},{"location":"DPI/NEOVIM/NEOVIM/#4-importando-configuraciones","text":"","title":"4 Importando configuraciones"},{"location":"DPI/NEOVIM/NEOVIM/#-clonaremos-la-configuracion-basica-desde-github-en-la-carpeta","text":"git clone https://github.com/LFrakie/nvim-rpi-dpi.git $HOME /.config/nvim - Luego ingresamos a nvim y ejecutamos :PlugInstall dentro de nvim para instalar los plugins. Y listo con esto deber\u00eda quedar, aunque es probable que si variamos de rutas estas se rompan y debamos actualizarlas","title":"- Clonaremos la configuracion basica desde github en la carpeta"},{"location":"DPI/NEOVIM/NEOVIM/#issues","text":"Error cuando abre nvim [coc.nvim] build/index.js not found, please install dependencies and compile coc.nvim by: yarn install&lt;br/&gt;Press ENTER or type command to continue Solution: cd $HOME /.config/nvim/plugged/coc.nvim yarn install cd $HOME /.config/nvim/plugged/coc.nvim sudo yarn build","title":"ISSUES"},{"location":"DPI/NEOVIM/NEOVIM/#font-httpswwwprogrammerallcomarticle92702244754","text":"Por si da este error del ( coc aplicar build ) usamos este comando para actualizarlo :PlugUpdate","title":"Font: https://www.programmerall.com/article/92702244754/"},{"location":"DPI/NEOVIM/NEOVIM/#instalar-ultimas-versiones","text":"-- versi\u00f3n beta v 0.6.0 PPA (Hasta la fecha actual - agosto 2021) -- sudo apt-get install software-properties-common -y sudo add-apt-repository ppa:neovim-ppa/unstable -y sudo apt-get update sudo apt-get install neovim -y [https://frankmwilsonm.github.io/wasm-js-bm/](https://frankmwilsonm.github.io/wasm-js-bm/) https://frankmwilsonm.github.io/wasm-js-bm/","title":"INSTALAR \u00daltimas Versiones"},{"location":"DPI/NEOVIM/SNIPPETS/","text":"Font: https://bhupesh-v.github.io/learn-how-to-use-code-snippets-vim-cowboy/ dsa y este dsad","title":"SNIPPETS"},{"location":"DPI/NEOVIM/SNIPPETS/#dsa-y-este-dsad","text":"","title":"dsa y este dsad"},{"location":"GIT/git/","text":"GIT COMANDOS COMUNES RAMAS CONFIGURAR CUENTA Ejem: git config --global user.name frankmwilsonm git config --global user.email frank.mamani@upeu.edu.pe Con credenciales: https://stackoverflow.com/questions/68775869/support-for-password-authentication-was-removed-please-use-a-personal-access-to CREAR OTRA RAMA git branch <nombrederama> LISTAR RAMAS CREADAS git branch SALTAR A OTRAS RAMAS git checkout <nombrederama> CREAR Y SALTAR AL MISMO TIEMPO A OTRA RAMA git checkout -b <nombrederama> ELIMINAR RAMA git branch -D <nombrederama> Subir una rama a GitHub: git push --set-upstream origin f-forms WORK 1 CADA CAMBIO QUE REALICEMOS 1 git status 2 git add . 3 git commit -m \u201cmensaje para recordar este cambio nuevo\u201d IGNORANDO ARCHIVOS Listar archivos o carpetas ignorados: git status --ignored Despu\u00e9s de modificar nuestro .gitignore git rm -rf --cached . git add . git commmit -m \"mensaje de nuevo commit\" REVERT COMMIT Esto retrocede un comit atras de nuestro repositorio: git revert HEAD font: https://stackoverflow.com/questions/3833561/why-doesnt-git-ignore-my-specified-file","title":"GIT COMANDOS COMUNES"},{"location":"GIT/git/#git-comandos-comunes","text":"","title":"GIT COMANDOS COMUNES"},{"location":"GIT/git/#ramas","text":"","title":"RAMAS"},{"location":"GIT/git/#configurar-cuenta","text":"Ejem: git config --global user.name frankmwilsonm git config --global user.email frank.mamani@upeu.edu.pe Con credenciales: https://stackoverflow.com/questions/68775869/support-for-password-authentication-was-removed-please-use-a-personal-access-to","title":"CONFIGURAR CUENTA"},{"location":"GIT/git/#crear-otra-rama","text":"git branch <nombrederama>","title":"CREAR OTRA RAMA"},{"location":"GIT/git/#listar-ramas-creadas","text":"git branch","title":"LISTAR RAMAS CREADAS"},{"location":"GIT/git/#saltar-a-otras-ramas","text":"git checkout <nombrederama>","title":"SALTAR A OTRAS RAMAS"},{"location":"GIT/git/#crear-y-saltar-al-mismo-tiempo-a-otra-rama","text":"git checkout -b <nombrederama>","title":"CREAR Y SALTAR AL MISMO TIEMPO A OTRA RAMA"},{"location":"GIT/git/#eliminar-rama","text":"git branch -D <nombrederama>","title":"ELIMINAR RAMA"},{"location":"GIT/git/#subir-una-rama-a-github","text":"git push --set-upstream origin f-forms","title":"Subir una rama a GitHub:"},{"location":"GIT/git/#work","text":"","title":"WORK"},{"location":"GIT/git/#1-cada-cambio-que-realicemos","text":"1 git status 2 git add . 3 git commit -m \u201cmensaje para recordar este cambio nuevo\u201d","title":"1 CADA CAMBIO QUE REALICEMOS"},{"location":"GIT/git/#ignorando-archivos","text":"Listar archivos o carpetas ignorados: git status --ignored Despu\u00e9s de modificar nuestro .gitignore git rm -rf --cached . git add . git commmit -m \"mensaje de nuevo commit\"","title":"IGNORANDO ARCHIVOS"},{"location":"GIT/git/#revert-commit","text":"Esto retrocede un comit atras de nuestro repositorio: git revert HEAD font: https://stackoverflow.com/questions/3833561/why-doesnt-git-ignore-my-specified-file","title":"REVERT COMMIT"},{"location":"GitHub/GitHub%20CLI/","text":"INSTALL GitHub sudo apt install git INSTALL GITHUB CLI sudo apt update sudo apt install gh","title":"GitHub CLI"},{"location":"GitHub/GitHub%20CLI/#install-github","text":"sudo apt install git","title":"INSTALL GitHub"},{"location":"GitHub/GitHub%20CLI/#install-github-cli","text":"sudo apt update sudo apt install gh","title":"INSTALL GITHUB CLI"},{"location":"HEROKU/INIT/","text":"INSTALL curl https://cli-assets.heroku.com/install-ubuntu.sh | sh CONECTARSE A UNA APP NOS POSAMOS EN EL MISMO REPOSITORIO SINCRONIZADO CON HEROKU heroku login heroku apps heroku git:remote -a myaplication SHELL / BASH - HEROKU M\u00c9TODO UNO heroku login heroku apps heroku run bash --app myaplication ----- Segundo modo SHELL / BASH heroku login heroku apps heroku git:remote -a myaplication heroku run bash Otro modo es entrando en el mismo repositorio: font: https://stackoverflow.com/questions/35857787/running-bash-on-heroku-wont-work PUSH TO HEROKU git push heroku main font: https://stackoverflow.com/questions/52704791/how-to-connect-to-the-selected-app-with-heroku-cli PUSH & DEPLOY heroku git:remote -a new_app git push heroku main font: https://stackoverflow.com/questions/52704791/how-to-connect-to-the-selected-app-with-heroku-cli Using CLI Plugins https://devcenter.heroku.com/articles/using-cli-plugins VIM INSTALL ON HEROKU instalar vim: heroku plugins:install @jasonheecs/heroku-vim abrir con vim: heroku vim -a **","title":"INIT"},{"location":"HEROKU/INIT/#install","text":"curl https://cli-assets.heroku.com/install-ubuntu.sh | sh","title":"INSTALL"},{"location":"HEROKU/INIT/#conectarse-a-una-app","text":"NOS POSAMOS EN EL MISMO REPOSITORIO SINCRONIZADO CON HEROKU heroku login heroku apps heroku git:remote -a myaplication","title":"CONECTARSE A UNA APP"},{"location":"HEROKU/INIT/#shell-bash-heroku","text":"M\u00c9TODO UNO heroku login heroku apps heroku run bash --app myaplication ----- Segundo modo SHELL / BASH heroku login heroku apps heroku git:remote -a myaplication heroku run bash Otro modo es entrando en el mismo repositorio: font: https://stackoverflow.com/questions/35857787/running-bash-on-heroku-wont-work PUSH TO HEROKU git push heroku main font: https://stackoverflow.com/questions/52704791/how-to-connect-to-the-selected-app-with-heroku-cli PUSH & DEPLOY heroku git:remote -a new_app git push heroku main font: https://stackoverflow.com/questions/52704791/how-to-connect-to-the-selected-app-with-heroku-cli Using CLI Plugins https://devcenter.heroku.com/articles/using-cli-plugins","title":"SHELL / BASH - HEROKU"},{"location":"HEROKU/INIT/#vim-install-on-heroku","text":"instalar vim: heroku plugins:install @jasonheecs/heroku-vim abrir con vim: heroku vim -a **","title":"VIM INSTALL ON HEROKU"},{"location":"HUGO-md/","text":"Install HUGO sudo apt-getupdate sudo apt-get install hugo sudo hugo version Run Server On LAN hugo server --themesDir ../.. --bind = 0 .0.0.0 --baseURL = http://192.168.0.130:1313 Hugo + Netlify + Forestry - PID 1. FONT: https://www.youtube.com/watch?v=sqyj9dl_fQo&ab_channel=Carlos","title":"Install HUGO"},{"location":"HUGO-md/#install-hugo","text":"","title":"Install HUGO"},{"location":"HUGO-md/#sudo-apt-getupdate-sudo-apt-get-install-hugo","text":"sudo hugo version","title":"sudo apt-getupdate\n\nsudo apt-get install hugo\n"},{"location":"HUGO-md/#run-server","text":"","title":"Run Server"},{"location":"HUGO-md/#on-lan","text":"hugo server --themesDir ../.. --bind = 0 .0.0.0 --baseURL = http://192.168.0.130:1313","title":"On LAN"},{"location":"HUGO-md/#hugo-netlify-forestry-pid","text":"1. FONT: https://www.youtube.com/watch?v=sqyj9dl_fQo&ab_channel=Carlos","title":"Hugo + Netlify + Forestry  - PID"},{"location":"JEKYLL/","text":"EMPEZANDO INSTALACI\u00d3N 1. Primero instalaremos Ruby, que es un administrador de paquetes que usamos para instalar Jekyll : sudo apt-get update sudo apt-get install software-properties-common -y sudo apt-get install ruby-full -y 2. A continuaci\u00f3n, para instalar jekyll, use los siguientes comandos: sudo gem install jekyll sudo gem install bundler Font: https://raspberrypi-guide.github.io/other/installing-jekyll-webserver // ISSUE with g++ Es posible que tengamos errores al instalar jekyll por el tema de nos falte este archivo g++-aarch64-linux-gnu en ese caso debemos onstalar dicho paquete: sudo apt-get update sudo apt-get install g++-aarch64-linux-gnu Font: https://howtoinstall.co/es/g++-aarch64-linux-gnu NUEVO PROYECTO LIMPIO jekyll new my-awesome-site cd my-awesome-site bundle exec jekyll serve // Serve on LAN: jekyll serve --host=0.0.0.0 INICIAR CON PLANTILLA Clonar repositorio: git clone https://github.com/wowthemesnet/mundana-theme-jekyll.git mundana -- Ingresar a la carpeta donde se clon\u00f3: cd mundana -- Instalar (gemas) o depedencias: bundle install -- Ejecutar servidor: bundle exec jekyll serve -H 0.0.0.0 Font: https://github.com/wowthemesnet/mundana-theme-jekyll SITIOS DE TEMPLATES: https://jekyllthemes.io/free Templates-list JEKYLL ADMIN UI Estos pasos son para instalar el administrador grafico de JEKYLL en nuestros proyectos, para de esta manera poder CONFIG Abrir Directorio Jekyll del proyecto Abra el archivo config.yml y agregamos el siguiente codigo. `- jekyll-admin` 3. Abrir GemFile y a\u00f1adir el siguiente codigo: gem \"jekyll-admin 4. Ejecute el servidor: bundle exec jekyll serve -H 0.0.0.0 Y ahora deberiamos poder visualizar en: http://192.168.0.130:4000/admin !# Link de ejemplo podra variar entre http://localhost:4000/admin o http://127.168.0.130:4000/admin Font: https://akhilgeorge.com/install-admin-dashboard-on-your-jekyll-blog // Errores No ejecuta el servidor Pueda que uno de los errores sea que estemos olvidando agregar bundle exec al comando de ejecuci\u00f3n: bundle exec jekyll serve -H 0.0.0.0 Font: https://github.com/jekyll/jekyll/issues/7054 jekyll-admin | Not Found Otro pueda que sea por el tema de que falte instalar jekyll-admin gem install jekyll-admin bundle install Es posible que necesitemos este comando para poder instalar las dependencias necesarias. bundle install Buscador - PID https://blog.webjeda.com/instant-jekyll-search/ Jekyll to GitHub Pages Configuraci\u00f3n Subimos nuestro proyecto a nuestro repositorio como de costumbre desde la rama MASTER de nuestro repositorio, pero antes debemos de tener la siguiente configuraci\u00f3n en nuestro _config.yml baseurl: '/jekyll-mundana-deploy' url: 'https://lfrakie.github.io' 1 . baseurl: \"Aqui ir\u00e1 el nombre de nuestrorepositorio o subPath de nuestro sitio web ejem /jekyll-mundana-deploy \" 2 . url: \"Aqui va la base host \" Resultado Ver DEMO GitHub Project: https://github.com/LFrakie/jekyll-mundana-deploy FONT: - https://www.youtube.com/watch?v=z6dx_OUChRs&ab_channel=Otimic -","title":"EMPEZANDO"},{"location":"JEKYLL/#empezando","text":"","title":"EMPEZANDO"},{"location":"JEKYLL/#instalacion","text":"1. Primero instalaremos Ruby, que es un administrador de paquetes que usamos para instalar Jekyll : sudo apt-get update sudo apt-get install software-properties-common -y sudo apt-get install ruby-full -y 2. A continuaci\u00f3n, para instalar jekyll, use los siguientes comandos: sudo gem install jekyll sudo gem install bundler Font: https://raspberrypi-guide.github.io/other/installing-jekyll-webserver","title":"INSTALACI\u00d3N"},{"location":"JEKYLL/#issue-with-g","text":"Es posible que tengamos errores al instalar jekyll por el tema de nos falte este archivo g++-aarch64-linux-gnu en ese caso debemos onstalar dicho paquete: sudo apt-get update sudo apt-get install g++-aarch64-linux-gnu Font: https://howtoinstall.co/es/g++-aarch64-linux-gnu","title":"// ISSUE with g++"},{"location":"JEKYLL/#nuevo-proyecto-limpio","text":"jekyll new my-awesome-site cd my-awesome-site bundle exec jekyll serve","title":"NUEVO PROYECTO LIMPIO"},{"location":"JEKYLL/#serve-on-lan","text":"jekyll serve --host=0.0.0.0","title":"// Serve on LAN:"},{"location":"JEKYLL/#iniciar-con-plantilla","text":"Clonar repositorio: git clone https://github.com/wowthemesnet/mundana-theme-jekyll.git mundana -- Ingresar a la carpeta donde se clon\u00f3: cd mundana -- Instalar (gemas) o depedencias: bundle install -- Ejecutar servidor: bundle exec jekyll serve -H 0.0.0.0 Font: https://github.com/wowthemesnet/mundana-theme-jekyll","title":"INICIAR CON PLANTILLA"},{"location":"JEKYLL/#sitios-de-templates","text":"https://jekyllthemes.io/free Templates-list","title":"SITIOS DE TEMPLATES:"},{"location":"JEKYLL/#jekyll-admin-ui","text":"Estos pasos son para instalar el administrador grafico de JEKYLL en nuestros proyectos, para de esta manera poder","title":"JEKYLL ADMIN UI"},{"location":"JEKYLL/#config","text":"Abrir Directorio Jekyll del proyecto Abra el archivo config.yml y agregamos el siguiente codigo. `- jekyll-admin` 3. Abrir GemFile y a\u00f1adir el siguiente codigo: gem \"jekyll-admin 4. Ejecute el servidor: bundle exec jekyll serve -H 0.0.0.0 Y ahora deberiamos poder visualizar en: http://192.168.0.130:4000/admin !# Link de ejemplo podra variar entre http://localhost:4000/admin o http://127.168.0.130:4000/admin Font: https://akhilgeorge.com/install-admin-dashboard-on-your-jekyll-blog","title":"CONFIG"},{"location":"JEKYLL/#errores","text":"","title":"// Errores"},{"location":"JEKYLL/#no-ejecuta-el-servidor","text":"Pueda que uno de los errores sea que estemos olvidando agregar bundle exec al comando de ejecuci\u00f3n: bundle exec jekyll serve -H 0.0.0.0 Font: https://github.com/jekyll/jekyll/issues/7054","title":"No ejecuta el servidor"},{"location":"JEKYLL/#jekyll-admin-not-found","text":"Otro pueda que sea por el tema de que falte instalar jekyll-admin gem install jekyll-admin","title":"jekyll-admin   |  Not Found"},{"location":"JEKYLL/#bundle-install","text":"Es posible que necesitemos este comando para poder instalar las dependencias necesarias. bundle install","title":"bundle install"},{"location":"JEKYLL/#buscador-pid","text":"https://blog.webjeda.com/instant-jekyll-search/","title":"Buscador - PID"},{"location":"JEKYLL/#jekyll-to-github-pages","text":"","title":"Jekyll to GitHub Pages"},{"location":"JEKYLL/#configuracion","text":"Subimos nuestro proyecto a nuestro repositorio como de costumbre desde la rama MASTER de nuestro repositorio, pero antes debemos de tener la siguiente configuraci\u00f3n en nuestro _config.yml baseurl: '/jekyll-mundana-deploy' url: 'https://lfrakie.github.io' 1 . baseurl: \"Aqui ir\u00e1 el nombre de nuestrorepositorio o subPath de nuestro sitio web ejem /jekyll-mundana-deploy \" 2 . url: \"Aqui va la base host \"","title":"Configuraci\u00f3n"},{"location":"JEKYLL/#resultado","text":"Ver DEMO GitHub Project: https://github.com/LFrakie/jekyll-mundana-deploy FONT: - https://www.youtube.com/watch?v=z6dx_OUChRs&ab_channel=Otimic -","title":"Resultado"},{"location":"JEKYLL/PID/","text":"-- INCOM es para adjuntar temas pednientes o en desarrollo de ser porbadas. Citar con ZOTERO - APA https://forum.obsidian.md/t/new-plugin-citations-with-zotero/9793","title":"PID"},{"location":"JEKYLL/PID/#citar-con-zotero-apa","text":"https://forum.obsidian.md/t/new-plugin-citations-with-zotero/9793","title":"Citar con ZOTERO - APA"},{"location":"JEKYLL/Templates-list/","text":"- https://jekyllthemes.io/free","title":"Templates list"},{"location":"JEKYLL/Templates-list/#-httpsjekyllthemesiofree","text":"","title":"- https://jekyllthemes.io/free"},{"location":"MKDOCS/","text":"MkDocs MkDocs es un generador de sitios est\u00e1ticos r\u00e1pido , simple y francamente magn\u00edfico que est\u00e1 orientado a la creaci\u00f3n de documentaci\u00f3n de proyectos. Los archivos de origen de la documentaci\u00f3n se escriben en Markdown y se configuran con un solo archivo de configuraci\u00f3n YAML. Empiece por leer el tutorial introductorio y luego consulte la Gu\u00eda del usuario para obtener m\u00e1s informaci\u00f3n.","title":"MkDocs"},{"location":"MKDOCS/#mkdocs","text":"MkDocs es un generador de sitios est\u00e1ticos r\u00e1pido , simple y francamente magn\u00edfico que est\u00e1 orientado a la creaci\u00f3n de documentaci\u00f3n de proyectos. Los archivos de origen de la documentaci\u00f3n se escriben en Markdown y se configuran con un solo archivo de configuraci\u00f3n YAML. Empiece por leer el tutorial introductorio y luego consulte la Gu\u00eda del usuario para obtener m\u00e1s informaci\u00f3n.","title":"MkDocs"},{"location":"MKDOCS/CONFIGS/","text":"https://squidfunk.github.io/mkdocs-material/getting-started/ https://github.com/Snickdx/pwadocs Windows Bueno la estructura de mi carpeta tiene varios archivos que son muy importantes para poder gestionar mi b\u00f3veda. docs-obsi Es mi carpeta","title":"CONFIGS"},{"location":"MKDOCS/CONFIGS/#windows","text":"Bueno la estructura de mi carpeta tiene varios archivos que son muy importantes para poder gestionar mi b\u00f3veda. docs-obsi Es mi carpeta","title":"Windows"},{"location":"MKDOCS/GET%20STARTED/","text":"Instalaci\u00f3n Para instalar MkDocs, ejecute el siguiente comando desde la l\u00ednea de comandos: pip install mkdocs Creando un nuevo proyecto Comenzar es muy f\u00e1cil. Para crear un nuevo proyecto, ejecute el siguiente comando desde la l\u00ednea de comandos: mkdocs new my-project cd my-project Hay un solo archivo de configuraci\u00f3n llamado mkdocs.yml y una carpeta nombrada docs que contendr\u00e1 los archivos de origen de la documentaci\u00f3n ( docs es el valor predeterminado para la configuraci\u00f3n de docs_dir ). En este momento, la docs carpeta solo contiene una \u00fanica p\u00e1gina de documentaci\u00f3n, llamada index.md . MkDocs viene con un dev-server incorporado que le permite obtener una vista previa de su documentaci\u00f3n mientras trabaja en ella. Aseg\u00farese de estar en el mismo directorio que el mkdocs.yml archivo de configuraci\u00f3n y luego inicie el servidor ejecutando el mkdocs serve comando: mkdocs serve Abra http://127.0.0.1:8000/ en su navegador y ver\u00e1 que se muestra la p\u00e1gina de inicio predeterminada: Build Eso luce bien. Est\u00e1 listo para implementar el primer paso de su MkLorum documentaci\u00f3n. Primero construye la documentaci\u00f3n: mkdocs build Esto crear\u00e1 un nuevo directorio, llamado site . Eche un vistazo dentro del directorio: $ ls site about fonts index.html license search.html css img js mkdocs sitemap.xml Elegir otra carpeta mkdocs build -d docs-obsi-pub Fonts: https://www.mkdocs.org/getting-started/#building-the-site","title":"GET STARTED"},{"location":"MKDOCS/GET%20STARTED/#instalacion","text":"Para instalar MkDocs, ejecute el siguiente comando desde la l\u00ednea de comandos:","title":"Instalaci\u00f3n"},{"location":"MKDOCS/GET%20STARTED/#pip-install-mkdocs","text":"","title":"pip install mkdocs\n"},{"location":"MKDOCS/GET%20STARTED/#creando-un-nuevo-proyecto","text":"Comenzar es muy f\u00e1cil. Para crear un nuevo proyecto, ejecute el siguiente comando desde la l\u00ednea de comandos: mkdocs new my-project cd my-project Hay un solo archivo de configuraci\u00f3n llamado mkdocs.yml y una carpeta nombrada docs que contendr\u00e1 los archivos de origen de la documentaci\u00f3n ( docs es el valor predeterminado para la configuraci\u00f3n de docs_dir ). En este momento, la docs carpeta solo contiene una \u00fanica p\u00e1gina de documentaci\u00f3n, llamada index.md . MkDocs viene con un dev-server incorporado que le permite obtener una vista previa de su documentaci\u00f3n mientras trabaja en ella. Aseg\u00farese de estar en el mismo directorio que el mkdocs.yml archivo de configuraci\u00f3n y luego inicie el servidor ejecutando el mkdocs serve comando: mkdocs serve Abra http://127.0.0.1:8000/ en su navegador y ver\u00e1 que se muestra la p\u00e1gina de inicio predeterminada:","title":"Creando un nuevo proyecto"},{"location":"MKDOCS/GET%20STARTED/#build","text":"Eso luce bien. Est\u00e1 listo para implementar el primer paso de su MkLorum documentaci\u00f3n. Primero construye la documentaci\u00f3n: mkdocs build Esto crear\u00e1 un nuevo directorio, llamado site . Eche un vistazo dentro del directorio: $ ls site about fonts index.html license search.html css img js mkdocs sitemap.xml","title":"Build"},{"location":"MKDOCS/GET%20STARTED/#elegir-otra-carpeta","text":"mkdocs build -d docs-obsi-pub","title":"Elegir otra carpeta"},{"location":"MKDOCS/GET%20STARTED/#fonts","text":"https://www.mkdocs.org/getting-started/#building-the-site","title":"Fonts:"},{"location":"NETLIFY/","text":"CMS HUGO |# Al usar el iniciador automatico nos pide un nombre para nuestro repositorio que se crear\u00e1 en GitHub, pero se crea un nombre aleatrio para el sitename y el problema es que cuando queremos personalizar ese nombre la pagina se rompe. SOLUCI\u00d3N: Lo que haremos ser\u00e1 irnos a Deploys >> Trigger deploy >> Clear cache and deploi site , esto renombrar\u00e1 nuestro sitio correctamente sin que se rompa. y listo: PROJECT: https://github.com/LFrakie/hugo-cms-netlify-example DEMO: https://hugo-cms-netlify-example.netlify.app/","title":"CMS HUGO"},{"location":"NETLIFY/#cms-hugo","text":"|# Al usar el iniciador automatico nos pide un nombre para nuestro repositorio que se crear\u00e1 en GitHub, pero se crea un nombre aleatrio para el sitename y el problema es que cuando queremos personalizar ese nombre la pagina se rompe.","title":"CMS HUGO"},{"location":"NETLIFY/#solucion","text":"Lo que haremos ser\u00e1 irnos a Deploys >> Trigger deploy >> Clear cache and deploi site , esto renombrar\u00e1 nuestro sitio correctamente sin que se rompa. y listo: PROJECT: https://github.com/LFrakie/hugo-cms-netlify-example DEMO: https://hugo-cms-netlify-example.netlify.app/","title":"SOLUCI\u00d3N:"},{"location":"OBSIDIAN/0%20DOC%20Obsidian/","text":"## 1 TITULOS & SUBTITULOS Consulta HEADERS: / HEADERS 2 ESCRITURA BASICA En Negrita: **En negrita** = En negrita y texto normal Alternativa: _Texto en negrita_ = Texto en negrita y texto normal Cursiva **En cursiva** = En cursiva y texto normal. Texto en cursiva 2 con: _texto_ Esto es codigo insertado (Alt+96) Cursiva y Negrita Texto en cursiva y negrita Texto en cursiva y negrita ==Resaltado== ~~tachado~~ 3 Ecuaciones $$ \\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,. $$ CITAS Cita De Ejemplo CENTRADO CENTRADO Y EN NEGRITA //TEST CODE: css p { color: red; text-align: center;}","title":"0 DOC Obsidian"},{"location":"OBSIDIAN/0%20DOC%20Obsidian/#2-escritura-basica","text":"","title":"2 ESCRITURA BASICA"},{"location":"OBSIDIAN/0%20DOC%20Obsidian/#en-negrita","text":"**En negrita** = En negrita y texto normal Alternativa: _Texto en negrita_ = Texto en negrita y texto normal","title":"En Negrita:"},{"location":"OBSIDIAN/0%20DOC%20Obsidian/#cursiva","text":"**En cursiva** = En cursiva y texto normal. Texto en cursiva 2 con: _texto_ Esto es codigo insertado (Alt+96)","title":"Cursiva"},{"location":"OBSIDIAN/0%20DOC%20Obsidian/#cursiva-y-negrita","text":"Texto en cursiva y negrita Texto en cursiva y negrita ==Resaltado== ~~tachado~~","title":"Cursiva y Negrita"},{"location":"OBSIDIAN/0%20DOC%20Obsidian/#3-ecuaciones","text":"$$ \\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,. $$","title":"3 Ecuaciones"},{"location":"OBSIDIAN/0%20DOC%20Obsidian/#citas","text":"Cita De Ejemplo CENTRADO CENTRADO Y EN NEGRITA //TEST CODE: css p { color: red; text-align: center;}","title":"CITAS"},{"location":"OBSIDIAN/CREAR-TEMA/","text":"","title":"CREAR TEMA"},{"location":"OBSIDIAN/HEADERS/","text":"Esto es un H1 # Esto es un H1 Esto es un H2 ## Esto es un H2 Esto es un H3 ### Esto es un H3 Esto es un H4 #### Esto es un H4 Esto es un H5 ##### Esto es un H5 Esto es un H6 ###### Esto es un H6","title":"Esto es un H1"},{"location":"OBSIDIAN/HEADERS/#esto-es-un-h1","text":"# Esto es un H1","title":"Esto es un H1"},{"location":"OBSIDIAN/HEADERS/#esto-es-un-h2","text":"## Esto es un H2","title":"Esto es un H2"},{"location":"OBSIDIAN/HEADERS/#esto-es-un-h3","text":"### Esto es un H3","title":"Esto es un H3"},{"location":"OBSIDIAN/HEADERS/#esto-es-un-h4","text":"#### Esto es un H4","title":"Esto es un H4"},{"location":"OBSIDIAN/HEADERS/#esto-es-un-h5","text":"##### Esto es un H5","title":"Esto es un H5"},{"location":"OBSIDIAN/HEADERS/#esto-es-un-h6","text":"###### Esto es un H6","title":"Esto es un H6"},{"location":"PYTHON/VirtualENV/","text":"Crear un entorno virtual 1. Generamos el entorno e ingresamos a nuestra carpeta o entrono creado: virtualenv NOMBREdelEntorno o especificando version de entorno virtual: virtualenv -p python3 NOMBREdelEntorno 2. Ingresamos a nuestra carpeta o entrono que acabamso de crear: cd NOMBREdelEntorno 3. Activamos el entorno virtual con este codigo: source bin/activate | Al activar nuestro entorno deberiamos poder ver el nombre buestro entorno virtaul creado de esta manera en el terminal: 4. Desactivar entorno virtual deactivate Listar Paquetes pip freeze INSTALAR desde requirements.txt pip freeze > requirements.txt pip install -r requirements.txt rm -rf EntornoVirtual/ FONTS https://coffeebytes.dev/python-virtualenv-tutorial-basico/","title":"VirtualENV"},{"location":"PYTHON/VirtualENV/#crear-un-entorno-virtual","text":"1. Generamos el entorno e ingresamos a nuestra carpeta o entrono creado: virtualenv NOMBREdelEntorno o especificando version de entorno virtual: virtualenv -p python3 NOMBREdelEntorno 2. Ingresamos a nuestra carpeta o entrono que acabamso de crear: cd NOMBREdelEntorno 3. Activamos el entorno virtual con este codigo: source bin/activate | Al activar nuestro entorno deberiamos poder ver el nombre buestro entorno virtaul creado de esta manera en el terminal: 4. Desactivar entorno virtual deactivate","title":"Crear un entorno virtual"},{"location":"PYTHON/VirtualENV/#listar-paquetes","text":"pip freeze","title":"Listar Paquetes"},{"location":"PYTHON/VirtualENV/#instalar-desde-requirementstxt","text":"pip freeze > requirements.txt pip install -r requirements.txt rm -rf EntornoVirtual/","title":"INSTALAR desde requirements.txt"},{"location":"PYTHON/VirtualENV/#fonts","text":"https://coffeebytes.dev/python-virtualenv-tutorial-basico/","title":"FONTS"},{"location":"TMUX/tmux/","text":"Mostrar .tmux.conf tmux show -g > ~/.tmux.conf CONFLICTO TMUX CON ZSH - powerlevel10k Soluci\u00f3n 1 No muestra los colores y el dise\u00f1o adecuadamente soluci\u00f3n: Editamos el .bashrc y agregamos esta linea (al final si gustas) export TERM = xterm-256color Soluci\u00f3n 2 1 configurar nano ~/.tmux.conf Esto es para mostrar tmux por si no se logra ver el archivo tmux show -g > ~/.tmux.conf agregar este valor al final: set -g default-terminal \"xterm-256color\" Iniciar con: tmux -2 tmux kill-server Leer configuraciones nuevas: tmux source-file ~/.tmux.conf","title":"Tmux"},{"location":"TMUX/tmux/#mostrar-tmuxconf","text":"tmux show -g > ~/.tmux.conf","title":"Mostrar .tmux.conf"},{"location":"TMUX/tmux/#conflicto-tmux-con-zsh-powerlevel10k","text":"","title":"CONFLICTO TMUX CON ZSH - powerlevel10k"},{"location":"TMUX/tmux/#solucion-1","text":"No muestra los colores y el dise\u00f1o adecuadamente soluci\u00f3n: Editamos el .bashrc y agregamos esta linea (al final si gustas) export TERM = xterm-256color","title":"Soluci\u00f3n 1"},{"location":"TMUX/tmux/#solucion-2","text":"1 configurar nano ~/.tmux.conf Esto es para mostrar tmux por si no se logra ver el archivo tmux show -g > ~/.tmux.conf agregar este valor al final: set -g default-terminal \"xterm-256color\" Iniciar con: tmux -2 tmux kill-server Leer configuraciones nuevas: tmux source-file ~/.tmux.conf","title":"Soluci\u00f3n 2"},{"location":"ZSH/INSTALL/","text":"Instalar zsh sudo apt install zsh Verificamo version: zsh --version 2 Install - OH MY ZSH sh -c \" $( curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh ) \" Una vez instalado, buscamos el archivo .zshrc y editamos ZSH_THEME con nuestro tema de preferencia. ZSH_THEME = \"agnoster\" 3 Install Theme - powerlevel10k git clone --depth = 1 https://github.com/romkatv/powerlevel10k.git ${ ZSH_CUSTOM :- $HOME /.oh-my-zsh/custom } /themes/powerlevel10k Buscamos el archivo .zshrc y editamos ZSH_THEME con nuestro el tema de powerlevel10k de esta manera: ZSH_THEME = \"powerlevel10k/powerlevel10k\" despues de esto reiniciamos zsh y veremos la personalizaci\u00f3n que necesitamos. Podemos usar este comando para volver a reconfigurar la apariencia de nuestro powerlevel10k p10k configure Elegimos la opci\u00f3n 1 : Le damos a yes 4 Plugins Es posible que no podamos ejecutar algunos comandos y se peude deber a los plugins que necesita para ello vamos a buscamos el archivo .zshrc y agregaremos dentro de plugins lo que necesitamos. FONTS: - Tutorial Principal: https://www.youtube.com/watch?v=5qNDJu1ek-A&ab_channel=Fazt - Oh my zsh: https://github.com/ohmyzsh/ohmyzsh - powerlevel10k: https://github.com/romkatv/powerlevel10k - temas: https://github.com/ohmyzsh/ohmyzsh/wiki/Themes ------------------- FoNt import: WSL | DOCS CONFLICTO TMUX CON ZSH - powerlevel10k No muestra los colores y el dise\u00f1o adecuadamente soluci\u00f3n: 1 configurar ~/.tmux.conf Esto es para mostrar tmux por si no se logra ver el archivo tmux show -g > ~/.tmux.conf 2 agregar este valor: set -g default-terminal \"xterm-256color\" Iniciar con tmux -2 fuente: https://unix.stackexchange.com/questions/1045/getting-256-colors-to-work-in-tmux Ruta Para configurar | zsh nano ~/.zshrc Configurar thema p10k p10k configure FUENTE RECOMENDADA: iosevka NF https://www.programmingfonts.org/#iosevk herramienta por instalar: https://pythonautomationtutorial.com/python-oh-my-zsh FONT GUIA instalaci\u00f3n completa: https://www.youtube.com/watch?v=5qNDJu1ek-A&ab_channel=LupitaCode","title":"INSTALL"},{"location":"ZSH/INSTALL/#instalar-zsh","text":"sudo apt install zsh Verificamo version: zsh --version","title":"Instalar zsh"},{"location":"ZSH/INSTALL/#2-install-oh-my-zsh","text":"sh -c \" $( curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh ) \" Una vez instalado, buscamos el archivo .zshrc y editamos ZSH_THEME con nuestro tema de preferencia. ZSH_THEME = \"agnoster\"","title":"2 Install - OH MY ZSH"},{"location":"ZSH/INSTALL/#3-install-theme-powerlevel10k","text":"git clone --depth = 1 https://github.com/romkatv/powerlevel10k.git ${ ZSH_CUSTOM :- $HOME /.oh-my-zsh/custom } /themes/powerlevel10k Buscamos el archivo .zshrc y editamos ZSH_THEME con nuestro el tema de powerlevel10k de esta manera: ZSH_THEME = \"powerlevel10k/powerlevel10k\" despues de esto reiniciamos zsh y veremos la personalizaci\u00f3n que necesitamos. Podemos usar este comando para volver a reconfigurar la apariencia de nuestro powerlevel10k p10k configure Elegimos la opci\u00f3n 1 : Le damos a yes","title":"3 Install Theme - powerlevel10k"},{"location":"ZSH/INSTALL/#4-plugins","text":"Es posible que no podamos ejecutar algunos comandos y se peude deber a los plugins que necesita para ello vamos a buscamos el archivo .zshrc y agregaremos dentro de plugins lo que necesitamos. FONTS: - Tutorial Principal: https://www.youtube.com/watch?v=5qNDJu1ek-A&ab_channel=Fazt - Oh my zsh: https://github.com/ohmyzsh/ohmyzsh - powerlevel10k: https://github.com/romkatv/powerlevel10k - temas: https://github.com/ohmyzsh/ohmyzsh/wiki/Themes","title":"4 Plugins"},{"location":"ZSH/INSTALL/#-","text":"FoNt import: WSL | DOCS","title":"-------------------"},{"location":"ZSH/INSTALL/#conflicto-tmux-con-zsh-powerlevel10k","text":"No muestra los colores y el dise\u00f1o adecuadamente soluci\u00f3n: 1 configurar ~/.tmux.conf Esto es para mostrar tmux por si no se logra ver el archivo tmux show -g > ~/.tmux.conf 2 agregar este valor: set -g default-terminal \"xterm-256color\"","title":"CONFLICTO TMUX CON ZSH - powerlevel10k"},{"location":"ZSH/INSTALL/#iniciar-con","text":"tmux -2 fuente: https://unix.stackexchange.com/questions/1045/getting-256-colors-to-work-in-tmux Ruta Para configurar | zsh nano ~/.zshrc Configurar thema p10k p10k configure FUENTE RECOMENDADA: iosevka NF https://www.programmingfonts.org/#iosevk herramienta por instalar: https://pythonautomationtutorial.com/python-oh-my-zsh FONT GUIA instalaci\u00f3n completa: https://www.youtube.com/watch?v=5qNDJu1ek-A&ab_channel=LupitaCode","title":"Iniciar con"}]}